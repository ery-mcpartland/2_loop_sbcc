Notebook[{
Cell[BoxData[GridBox[{
   {Cell["PACKAGE-X TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Package-X\"\>":>Documentation`HelpLookup[
       "paclet:X/guide/PackageX"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"X/tutorial/AdlersMethod\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["X/tutorial/AdlersMethod"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/X/tutorial/\
AdlersMethod.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "X/tutorial/AdlersMethod", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 "Ward Identities and ",
 Cell[BoxData[
  FormBox[
   FormBox[
    SubscriptBox["\[Gamma]", "5"],
    TraditionalForm], TraditionalForm]], "InlineMath"],
 " in Dimension Regularization"
}], "Title",
 Deletable->True,
 CellID->509267359],

Cell[TextData[{
 "In ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X, the fifth Dirac gamma matrix ",
 Cell[BoxData[
  ButtonBox["\[Gamma]5",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/DiracG5"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " is defined to anticommute with all other gamma matrices.  This \
implementation is \"naive dimensional regularization\", and can lead to \
apparent violations of Ward identities.  This tutorial explains how to deal \
with ",
 Cell[BoxData[
  ButtonBox["\[Gamma]5",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/DiracG5"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", enforce Ward identities, and check for anomaly cancellation with ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X, using the on-shell ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function in the standard model as an example."
}], "Text",
 CellID->1408009221],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellID->1193904931],

Cell[TextData[{
 "For a given fermion flavor in the standard model (quark or lepton), there \
are two diagrams contributing to the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function:"
}], "Text",
 Deletable->True,
 CellID->301040662],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3b+Oc8uaF+AyEBBBnzswkyO1NDdg0FxACzS5QYKUFiAhMpMdiQCnJ3M8
JM5JfAETWMQgOQYJWYgACdDHqu3lvb39+U/V8lqu9edp6RntOV+3/VZVt9u9
3vWr+nv/9F/8o3/+N0II/+pvV//nH/2Tf/MP/uW//Cf/9h//rer/+Yf/9l//
s3/6N6v/+G/V//m7fyeE+D/++PEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgIEKs/BZWVRWlXVlVzlUfsT/P+Nx5pXv+uuP9ddfO9b/Hj9vXnrsAAAA
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
cwrPM4/ZdQLA0KJsXbXaW8dZpPpzV9nb/0W7/OkoM/h7nZ068s85Zqymdj2u
7/7UFr9+UuvfzvXJOGRiL/XlY/+qfyd7O4Hx2r+WIxh/69I2u02B+1RwfKqy
awQAAAAAgL7E9DODdcZind2OAMdCdpDr99fq2nk34XndQII4rIE6inMeAIxJ
lK2vVnuIw5pspT9/zuveU4xorbYv2uVvTbbqT2f+7bOcluygvpvVFqcZwN/O
9d1PfvcvTTbwUhv8lr2dwLjFfNYefM5uS+B+FRyjquwaAQAAAACga/vXY0w7
M1irc4MP2W0JcCpkB7ltn61vOC/W+1uGEBhMPa/G+QUAflbnoApzU28nv1dn
sZ6bPNVXv1fFYY229VgzV1e225/mmB2cEn33p236y0ntv17xHvU6hL9faJN/
leYRgfu0fy1HMB53q3V2OwL3reA4VWXXCAAAAAAAXYnDekYX5/dOgNwgMFoh
O8jt+2194znyeW85UK2rI49Nn1uf/Hd5RpipkmuL7BoBYGjNOmol+auX7FrH
RnYwvf313R9tcbzmYOvc4NH7/OnM+oWnrn5/YP7q+2p7ryMYl7v2PuVjdhsC
FByvquwaAQAAAADgVjGfzOD3Zox0md2mAJ8J2UG62XcPzfyaW8+ZT12cN+Pw
jPN1HHKJ136nqH9v29TkGQAwAyXHg+waAWBoda6qMH/1lF3r2MgOpre/vnto
h1+PtvVvHbzff1xoz5s/A5ifOGQGNx3cH8ziGaDAaJSMXWTXCAAAAAAA14p5
ZQZrdQbC2kXAqIXsIN3tv4fo7rniuzjk9jbN94NP5+7Ej/UC6599aX63rzlE
dU2ePw4TFbKDAPBBYfaqZj59edvJDua2/1313f32/dZs5z87fM9/fNGe/8je
ZmA8YvqZwfexvFmfK4BpKThuVdk1AgAAAABAW9FtZvB/7v3XCMYa6+2RGwRG
L2QH6XYf1vOFXkZwHu7be45wmd3mQLmQHQSAn8QiHguzV7vsWsdIdjC17fXd
H23xr2Zbf+3wPX/9ok07yygC0xXzyAzWPAMUGJ2CY1eVXSMAAAAAAJSq59tH
d/mCt2ac8n28MnOscZvdtgClCo+ZqxHV8ofsduPivnyK6c8dKlUN9TcC3CZk
BwHgJ7GI58L81Ut2rWMkO5ja9vruoR1+6SPPt3+/P8kOAufEfDKDtXp8Um4Q
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
4xglvYMAAMCEHOj5y75ssa3WaxfCOUi7tRnO4vlD5iHt3qvbV70x3zOrovcJ
gJOpNkII0U9Ef59xxADPKY5d7rVbRI97j8ev5NmG2ewvAACU2MbFnutitTxG
Y4C5+H3SMwgAZ6vkeZ/oHMeo8P668QMAAMKlV+njrb/29Pv92nJ7Xx7oQ/w8
el9hDLaxmvMzh8xHrg+m/e/UbSPfK6ui9wmAk6s2QgjRT0R/n1Ggfm5xmQrW
sZuBh7k8U7mNm4L9vYzOEwAATunZdXKulVxE5wRZ0jMIAAyg5Lmf6BzHKOkd
BAAAJiK9St8f6PX7usM2f++rFxHmpK7lPL0vcBOdEzyX9AwC0J9qI4QQ/UT0
9xkNpd0aHTc9zi2OzTny5+T10qva4lkej/89P1u5Sv32Nq6ix7qHY3VVsJ/X
0XkCwBzUNblDdbnf6z/7MjpP4MN18mNf1m2u70XnA0nPIAAwoJJ78dE5jlHS
OwgAAEzAkTUH/+q43UN1T/VOzlra9WRt6pqOd/YzKknPIAD9qzZCCNFPRH+f
0UHu5avnG1379u7r53Zzr1unNT/S32skrnp47jLPfyb7LHHa9VW+tI930XkC
wFSlV+nTrZ8O1M0O+b3LOz6BbnINL3mHBiOR9AwCACdQch88OscxSnoHAQBg
ctKr9Lph3W7Ofuk4lp8f2K61Bzlr9TOOd12fcYQ+1TXwe/VGAAZQbYQQop+I
/j6jZ2nXT1jV85HrA5b1zww6h05/9xF26WvMvzvl/sGSfZzs/gFAlAPv2vyw
vuCzn/v8QH/hL/k9oNH7Aecm7dY29w5QQiU9gwDACel9az1u68JrMeMHAAAj
kV6l5Qh69sai87tM0/71DLPPo481RKifi7z1rB1jUT+DW3oPS70RgDaqjRBC
9BPR32eciY7zpMn2D6ayvknPTgNAA/l9mntqZD++8Du5h/CPZ7+T//+n0fsD
52Sq1/XMg55BACCC3rfW46Z3EAAAJia9SqsR9OyNRef+vrR7F+q+bR+ti8Jc
qTMyFnoGATihaiOEEP1E9PcZZya1X599kv2Dabeuykv7dh2dJwBMRZu+wSe/
++me93PqHwSYOT2DAEAkvW+tx03vIAAATEx6le5H0LM3Bn/1NJ7fD7l9AJrR
MwhAgGojhBD9RPT3GWeofm6zpKfuX/2D0bm32NfKsw0A0I/cI7inNvZ7w218
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
VOM6Y5t4jK4TAABgyWQIAWA6FpodvEqn7114nzLvV1gyO9jUs2mefxbznz5U
39/yerMX3x8yFV57sM4Kvvj5i9ZF5LN53WS+R/vCzys3CAAA0JAdZOqqsa2v
D5UhBBiN9ZNhjGh8/fXX2d8pf33z6+hyJzf+8pe/PP38b37+4xx++asvSz58
9P6MIE2f/Nx3dz3bBco89ruOrhMAAGDpZAgBYPyWmB1sXvfqnXPNj833jjfP
M5fIDlbjpnmet+o4pInePzF9qGof8Fq/Ftc+Hs48zupVDlGvodx7lJsnLbrO
Zsbz1u/3Onp+AAAAhiA7yByk4324SmYI7/UfATpbPxnGiMbfrv82+zvl77e/
jy53cqNeY/B5/r74xRc/ZAkLjuj9GUHS6Xv+vla0f8g0pNP3Xn5tE10nAAC0
oVfHnMkQAsB4LTU72Lz2m4zXf2iuRVq9+t1O2cFqXNe9jeZxz/3uJHNrTf4u
5/ih2LaV2q09uH3nMR7O/Ryd36Pc9+fitShfvJ/7jNzg6P/Oqhp/U/mu8rvo
WgAAgGnTj2ROesgQ6j8CtLd+MoyRjL/+9a+tvlPKDrYbHz9+/Gz+vvvuu9JP
Eb0/I0BzTWHOd/XR9/PoZfu4zdg2ttF1AgBAG3p1LIEMIQCMz5Kzg83rv2vx
3eOhOT991SY7WH9faX4v556Jkz/HXR0X3EYc07Q8plq/+t3XucGH6Hmckzqf
1+K9ubj3l4751Yczz1P/+6jX9azq+6rJDD7XLDsIAABcRD+SOZIhBAi1fjKM
kYx/2PyD7GBPo84Jvpy7b7/9to+nid6fEaD57n3u+/khuk7Cto/10q9nAQBg
fvTqWBIZQgAYj6Wfa22uLWqT6Xv2r4V/bjZzXh0X3HfJ7xV43jZrDz41x2D1
Mc9N5VA6v8Zn701unvTiuW/ez3PbwV30nJx5DXVm8I8n6pYdBAAALqIfyZw1
5/na3CdM/xHgcusnwxjB+MMf/tDq+2Ttl9e/jC57EuP7779/+uIXX/w4b998
801fTxW9P2Ng1bjO/F4+6r4evW8ns762AgCA5dGrY4lkCAEgnnOtrfoSQ3ic
+veZyGOH6nE3bY9hTriNnsO5qeZ03/exbjquNXgut1pnRNfR8/HOa/jyjcyg
7CAAAFCEfiRLUJ9bS3nrl+Sq84hX0a8LYKTWT4YRPL7++uvOPaF/uv2n6PJH
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
xWtfobv+zD4UyhBmXIvUvwOAkQqH/nuTc5BN6bGPTUjfezBalh7vI0m8H3eQ
PR/rz9/XrglesypdQwDoWvX+thvq/Tnc3384vjcvS9dkbhLm5ZLl2Wtceh5i
H9al68V4WLtArjCSDGHC68YxPre4HnirV7mtX3d9wab+77uOf27MG8iY3F8X
XWfIjvO9OZnjmFla1v/3fN67zDLJmKTNedcZsjiP72dzfW51Mu9drrddXMOl
azp2odsM2efJ7/dxfhdnP+983j86XHN7c353vp9Dd+cdu/DP+/fyVu3rn3uc
9/cOf9fNOQAAvQiH5wX2es9OuL0nV+PXpbc18Za4Jj4vzG38360+u4T0Z+8e
bUrXjHGwdmH64jXWMOEMYfX1fySObVG61gDAZXWvr2l/b1N6/GOT0a+1L3NX
NU/fZ+htwDHl3msc7ym2HgB4GCH92XOdPG8q3M4ptr4WTqu5ydnDbX/2vctw
OXu1r/sTq/rfHL026FucWpSuF+Nh7QJNhMIZwoTX+28d3ecfXyNmBl5zr2+F
f3IH647GIm9wu94voX2eZ1+vxVXOejwbx6L+/k1H4zHn12u96uh3/K1tnevf
9fi3YtfBnC9L13asQvv7TY6/49l/0y+MZVGvnbZ/3+OYVqVrO0ahXU/v/Hd8
0dF4XkM3f9/NOQAAnYp9yD6vsYfrucG93uQ4hfT7uWJO6+Os39z6vq6Qnmc9
2pauGeNg7cLjqK+hdvWMz8EyhCGt//nfStcXALitZa9xVXr8Y1Kf1+X0Z+XF
2tY8bU+jQe+nDc32HlyXriUAdCWkP/du2cHPunWdvJNr4QyyFqLNyfctr/Ra
1/fmNJ73hbR9qa/+fLB2gTZCoQxhwuv8fy3GsKv7j3fHkVmreC2tbc5Eluxy
bVehXY4j9q5fexrba2jXG9/3NbYpC+0yZMd7DBY9je0ltM8WrUrXeExC+31k
t33WtP77vjbnnc950/fLY0Z00fP4VqFdXticAwDQmcTr7Z8NX/tabtAzTUcs
pD838jR7teuy35zbAypdM8bB2oXHE7rtJcZrf73urZJ4ze/X0nUFAO6re3pN
+3mr0uMfk7ofnlo7+cE2tU7fc7DRtb6WY8vdN2RXup4A0JWza9LX7Dv4Obf2
N9yUrgNfruWorlmdzOv5cxg+cnobN3q2N9dkl/0Tps3aBbrQcd/vy717/jv8
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
3QjN983blB77mITmOczz+wDifSLx+bPZ9wPU54zL+rwxemvyOsVq+FQdf/pn
0XXhsS4y7/d1zy8AkxTS8/KrxNfbXPjevffJ6cjsH7z3OA75K3LXjLULjEro
PkP4WfqYOqpL6jW2/ZSue2Ucf87+c5vS4zXnnRx/zh5dq9LjNeedHH/O/nOT
zoo2mPPdg875em5rPqRnoh91zrcJx74oPU4AgKm40l/8rt944fueb3zvqsix
HK4JdnU9cMqWLddEap406v2ZJZl9n23p3ylr19qd09qFqQo9ZwiH+rsHAIxH
fX7RND+4Lj3+MQl5z0ZPsQuH/uL6xGvt9P+3DdefWRvPG1ela5NUv7zPosXX
XuZ4o7fSYwaAXPE9N/F97uZ9XnVv7lJeJj474CHuhZyDkLf38v7eumg5Fvkr
ctaLtQuMVugmQ/hIWYOca5W9Zb0LHv9H4rE/RFbUnH89/tRj7/054+Z8sGNP
vdfjYa4nz3zOc/LBy9LjNeedHHtqr/Bh5hsAoG8h7Vnkm7Pvic8E/7zx7xdF
jkX+qpPz4ZCWJ/3a8xlgfeb0oL5bq1Nh7Vq7U127MHWhpwzhUH/3AIBxCe3y
g6vS4x+T+nPybgSfU0/Fc8ZF6drcrV3eZ9H1CMabe89v8TEDQK47PbWjm/ct
V//95crrfPaZz6GX9ZCaJY16vfevwbnYsnT9KMfaBaYgtMsQ9v784YFrkZOz
eJhjDzPci8ycJ+9FFq83P9RnpxnPeWo+eFt6rOa8k2OebX5uxnMejzn1Pq5F
6fECAExB3WdMuZa+OvmemIfZj/EeniB/dbRsuS7uze8gPZ96LDn7yEWTfFaQ
tWvtTnXtwqMIh2uN7x3+PfsfQ/zdAwDGJ+T1s86tSo9/TOpztNR7AIYy6r5z
yH+OzXoEY5YdBOChhcNega3e42705uLz9B7q3tc5CGlZ0qNFz2PJOhcrXTvK
snaBKQn5GcL/XnrMPdVhnXj8k3hmVsLxLjKuza5Lj9ecd3K8y4zf84fI1Jjz
5L3IoofKB5/UIPXelv0j1CAcnuGderwPeY1kTnMe8rKi29LjBQCYiphVSbye
/pz573vf0+vi8chfHS1brInUPGnU++eMkL6P3GBjsnatXWsXHlc49JM2U/i7
BwCMV2iXH/TZ4Pt6xs/MuxF8Zo22petxs1bTzA6+T23MAJAjpD9n7uJ54I3e
3Kb0sdFoPaRmSaOPAcaT+kxG+auZs3aBqQrpGcL/pfRYezr+54zravE+/clm
LkJe1mA35WM1538fa851+G3p8fY856l1mPqc5+wrOurnAJrz5GNdZ8z5qvR4
zXknx5rzTNFl6fECAExFSHse32fdC8jNwawGPx75q9bnxDd60Od2A63RnOdX
DjIma9fatXbh8VVfizBMhnBZ+lgBgH6E5vnByT8TtMeavjWsaZd6vwe2VY2m
mR1cT23MAJAjsb/23TM57/TmVoMfhz5GJ9fzQnqWNOp9X5TM87Bt6d8na9fa
ndPaBbpVvx/8jyt/I/9r6fH1fOw5WZtRX/u6c5w5WYOH3H+u4ZxvS4+34THm
ZEWjRekxj2jOJ5krCnk9l4fdf25mc7569L9l5vy7Y9xkHOPD5oMBAPqQeC19
k5mBKXYNPuj9HC1brImUPGnU+7l39TMWmWtuU/p3ytq1due2duHRVV+L0G+G
cFn6GAGA/oS8vuYp+cHrNY33hKxDuX0IV6VrcLM++dnB4r3VIDsIwIOr3rt2
udeI62vMt3pzi8GPQx+jk+t5If1Zrd/lSXtYm7nnjpu+x2TtWrvWLtC36uuX
cLiuFP3flf+p9JgGOu6cXN2m9HgbHN8m4/gmm480538fW25ucF16zCOc80nl
ikL+sxofOh88kzlfZRxbXBuL0mM2562PLee9fDelYwMAKC08hdfMa+pNLAY9
Jr2fo2XDNfGcMbe938MY8p5fGU32c7+1a+2WXoPAbdXXIuRdg+v17x4AMB2h
eX5wF/S9Umq7HfAz62fpY75bk/x7aLcjGPNb5pjXpccMAKni9ejE97fVyffE
9/P92N4Pgz5GJ9fzEub2aIjnIOb2Mt5K/05Zu9bunNYuQJfCIWuVk7vZlB5z
xnFtMo7r4fciazHn2ynUJhz69jm5wdFf0y0455PIFYXD+fzD/f0y5zeP6y3z
s85szvcbzvmi9LgTjin3fqxl6XEDAExJvG6feU3973uKQvo+hJvSx0nWmkjN
k+4GGs9HxrocZEyMk7ULDKW+Lr3NvGblehYAzFyDPuek+rilhcP9Im8dn6d9
d7/BFOYiTDM7mDvmdekxA0CqkJ6Rf878973v6/Xdschftb6eF9KzpNEQz0FM
3UdusDFZu9autQvQn+rrNfO9Y9TXJkP+3nOt3g+nqMF50KgzJiF/77nZ7EXW
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgGH4L19YQlM=
     "], {{0, 1002}, {3599, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{328.0848958333328, Automatic},
   ImageSizeRaw->{3599, 1002},
   PlotRange->{{0, 3599}, {0, 1002}}]], "Input"]
}], "Text",
 Deletable->True,
 CellID->1762299204],

Cell[CellGroupData[{

Cell[TextData[{
 "The weak neutral and electromagnetic vertex factors for a given fermion ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]], "InlineMath"],
 " are:"
}], "Text",
 Deletable->True,
 CellID->865843218],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3bFv5MYVx/HnJEXKu/9gk7/gALcpNsH9AYID92vDcRvBCSC4CRapXKp1
t0Wqq1THzZYprjggKXPAFkGQJhcVNlI4hsLxciGamhkOyRk+ku+7wCc530nk
DMXH4ZD8UT/7+LcffPojEfndT6v/+eCjm19+9tlHn//6J9V//Orz3//m4x9X
f/jFeyLfVf/v/vLh4QHAilWfXeXelXvlqN0eAOVUn2eNen84D/P67QJQRvXZ
N+udmgfWyzfGU/PAelWfQ7ve3d9ptwtAftVn46l3Z6PdNgD5Bcb4vXa7AORX
fV546t3N659ptw1Afu4ePGM8YEP12TLGA3YExviddrsA5Fd9rjz1ftJuF4Ay
XH0zxgM21Dmadr2/0W4XgDICY/xWu10A8vPlaMjMAusUytEwxgPrFBjj77Tb
BSC/yBi/0W4bgPzIygJ2kJUFbCErC9hBVhawhawsYAdZWcAWsrKAHWRlAVvI
ygJ2kJUFbCErC9hBVhawg6wsYAtZWcAOsrKALWRlATvIygK2kJUF7CArC9hC
Vhawg6wsYAtZWcAOsrKALWRlATvIygK2kJUF7CArC9hBVhawhawsYAdZWcAW
srKAHWRlAVvIygJ2kJUFbKk+f2OMB2yoPp946v1rxnhgfepz+m/J0QDrV9f7
N556/6922wDkFXn2xvmzdvsA5FPX+5tAvTtX2m0EkEdCvT9w7Q5Yh8R6550Y
wEq4bFxHvfNsPbASgedqfXbabQUwTo96J08DLFzPer/Xbi+A4arPdY965104
wIKJ/z3VXa612w2gv4H17my12w6gnxH1/qDddgD9yDkzE3qGvstRu/0A0o2s
d2ev3QcAaTLUu0OuBlgAOb+rdmy9O+RqgJmTtMxMCnI1wMxlrHfnVrs/AMIy
17uz0+4TgLDM9e5stPsEwE/6ZWZSnLT7BMCvQL075GqAGSpU7w65GmBmqs++
UL07L7T7B+CRjMjMpNDuH4BHpetdyNXk/Xm9Jy8rX1QeGt5VbirPtduHeZug
3p29dj/XoqrpV3WNv3W13/j7m0b9v9RqH+at+mwnqHdnq93XNWjUuxvTf+75
9w+pe4RInoxcqlXkajzn01P6R+PPn0ba+GXjuMB5Pr43cb2vJldT15FGvf+n
cp9Sy/Vc//J9X2pvM8xD9TlNVO/OKnI1Vf28H6nJm9qg82l3nt5xPPlT48+v
EpbXXBZjPVzNu+zMfqKxfhXvyGhdI3Neu/lzpmW/7jieNP/9JmF5r/p8Peyo
a/9QuOY32v3Msq1+WEedY22P5cauEbh1Pm/9XedxprXMr7S3HebH1WWh2j9p
9y3bNno8X36dcZkfRur9bV3v7a95cr3es9zmOck77W2H+ZLztb1jxpo/aPcp
y3Z5nMt775ENXGbXHP79+uvac4rO+Xn1NZ/6lgWEyPm+fY7aX0WupnGunGVu
XI/f0Tl842u/bP5b4vLb5wbcq0eneq7/zciaX0Wupq7PtxmX9ypS769aXzuk
5l+2lhm8nw9cZJjfr+J3zzauoWWpG8+5+pM5fOvrqXkUV1/T89XxHyX9/t5R
ux/Ztke+OXzsHn/oeVpqHsUFxvh9/W+p9/b32v2Yk/p84W2k5r334DLVPPN5
BNXX7p+cp0vrmfm69m8jNb/V7sucdMzhv4h8382Amm9ft89ynoJ1Clyv30e+
fuM7L9Dux5x0zOGj9/s91+BT7s83a5778wgSf7b2yRgf+N5N43hx1O7LXAyZ
w7e+v/0cXue99tYxJtszg1ifwBi/67mMbd/vWauhc3jPcpr38juvx7WuAfC8
Pbyqz5Wn3k/a7VoySXzuJmE5zXE7OPcPrJdcHbzEn6/dabdrqaQjO9NzWc/l
8Tnd6Py8NRcgPw8v8b8TbzXvuph8eyZkZwYss3ldLvaenMs5QbZsANYnMMZv
tdu1RJKYnRm47C9ix43W9YMs2X6sj/h/j8VRu11LlWsOH1l+s+4/bPz9y8a6
qXd41c/V+J6n22q3bYlyzuE71vO+Z1283x6dAmM8v0tyyLYsMIcHcoqM8Rvt
ti1Nxxz+3Zg5PJCL73lZWcl7bSbdjt3vv2BuDXX1c7K+XMxGu21LIwOzM8CU
AmP8XrtdSyMjsjPAVCQxK4uO7TgyOwNMJZCj2Wu3a0kkU3YGKE1GZGXR2I7M
4bEQObKy1nXM4cmqYzbIymbYhvE5PM/dYFbIyo7cft1zeJ67wWyQlc2wDQtn
Zzzrc8cX8u8YhKzsyO03UXamsb7LNQPeUY3eyMqO3H4TZ2fqZ/e/X7Z237E8
ZGVHbr+C77+IrPMyh+DdleiNrOzI7TdxdqZa5leN5fMcH3ohKzty+8Xn8Fmf
u6nvCTTr/Svt/mN5yMqO2HbxOXzW7Iyc323ZvgfI75REL2RlR2y77vdfDD7n
rp/puamFnt99x7M96Ius7MDt1v3+iylwTx69kJUdse3iz9JPhXvy6IWsLGAH
WVnAFrKygB1kZQFbyMoCdpCVBWwhKwvYQVYWsIOsLGALWVnADrKygC1kZQE7
yMoCtpCVBewgKwvYQlYWsIOsLGALWVnADrKyatv9WX1+5VzXLv+9+POr+vqQ
68uufsbrqv7vjXbbMvRt0/hZ7es+bpfynKqQlZ1yW7s6uA1s8yfH3fo+ylL2
o0193PKdM/rmjXd1rSzi+Fa39U78z6s9yZ7W22Kj3e5AP8jKTrOdU+o8Vv87
7X4E+rYR/z3eVPf1WDm72pfzudg+sc5DjnM6bgf2w9m0b+nkPK6njHup3Pjx
Qrtfdd9cPdxm7Jurq2vtfjX6dzWy1tsO2sc1IStbevvuMu8zTTvlvr2ojz8l
+nY3g9o4FOrbSZSO2UJWtvT29R1P2z/7gzxe+3E1tJHHa14pc/6DUt9eJBzL
XN3+4Jqk/PCaV9fx4o1G3dftTGmb68PlmmT7WmzXnP9eo+4D+yRZ2Tzb9jry
8z66faXHsrYSnxvcTty3WL33mpdL93WAyeu+o95dWzeJy3HHgZ2Ej9uT1r2Q
lS25bX33PS8/48FzVYnPLXcT7jehffgwtD4lPk+YbByKHH8GX0OR+DWP+6lq
LtC3w1Tbdq3qcctXl1mO6ZHamGTfkfM5a7FjTqTmil/Xixyrs1xbEP/9se/P
+ybaL33rLr7PrF2gJrKew0XG2qL7TqQmdpnX46v7osc0CZ/3Zj3HiNR90WNa
9fm3Z537kuu0IvDzzD5nk/CcOvk6Qc/1hY4zRa4liP9cptg5vvjPvYtcSxD/
tZ5iuRbx52j+V2p91njqcF9wXaF9p8Qxxnf+Uuy5LQnPkbKPh5Gxt9j1NfFf
k82+PSPnL5zXl9l/jhOszzceZh2fJDzH3hbu2z6w3l3GdYTOl4reC5Hw/PqQ
cR1d9xyL758osu/43nGSZbyv95lQvU9yfzCyz44e7yPj+ynnMTOy/tAxbfQ1
w/qYkvK81FZ7H8agn29o3x08t5DzHDC0z0yWxZDwOf6lNjYDlvlMwvcfpr5n
HmrHaWg9ynnOl/rs51F7/8XgfSc0Hl/2n6R8l5yvzR8jy9J4Rqbrmb9DSp3K
Y54xtqwi10Ajbeo8/5aEuYx0P/9z2U6+f99q778YvP/sE47rb+qf/b7lmDA2
qDwLW/ct5Vlftz/fefoW2tfb4/uk9d7oW8qzvpf6b/ftNvF7D/W6dr7tpr3v
YtT+kzsH1hwjtDMvm8T9u69Z5BQlbz6xeSzbtdbjO/7tNPqMbPuOq43QPLEv
t3+ojH+R/u0zHtf22seyVt+2gZoc4iie+Zz479eftPuObPvPYUSt77T7EOnb
sxG1777n1lcPcyHnc/Ch5zTueL/tWP7R832zeW8BRu8/l+s7h8h+dC+P80X1
89ye/buqa9i3HzfHPPc1szpnSejbRh6zuadA397I4zvGNonL9Y31xZ4FBKAv
cIzca7cLQBnifxaQsR5YMfFf75n0HSwAphMY6x/mfH0TwDjify7goN0uAGUI
78kDzBHeeQ+YEhnrt9ptA1CG+N+7dNRuF4ByAs/6bbXbBaAMIWsLmCP+TMZO
u10Aygjkb07a7QJQDvkbwBaytoA94n/X0l67XQDKIGsL2BPI2h602wWgDLK2
gD2B/M1Bu10Ayojkbxb1rlQA6cjaAraQtQXsCeRvjtrtAlBOIGu7qN8TAiAd
WVvAHrK2gC1kbQF7yNoCtpC1BewhawvYQtYWsIesLWALWVvAHrK2gC1kbQF7
yNoCtpC1BewhawvYQ9YWsCUw1v9Tu10Ayglkbf+g3S4AZQTyN9/yTC6wXtXn
7566/xd1D6xT9fkk8EzuX6l7YJ0CNf9Qz/epe2Blqs9fInV/p90+AHkFnscl
hwOsVOD6PXUPrFT9DH5XzVP3wIoEns/x2Wm3FcB41ec2seape2AFAs/fU/fA
Skn4fXnUPbBS4s/Xxrh3b/BeLWChxP+7L6h7YKWqz/WAmqfugYVydTuw5i91
v9HuA4B+xP9+zFRkcoCFEf/vrqbugZWS7rwNdQ+siKTlbVIctfsCIE2mmncO
2n0B0E3S8zbUPbAC0i9vQ90DC1d9rjLXvLPX7hcAPxmWt0mx0+4bAD/pn7eh
7oEFc3PwQjVP3QMzJMPzNqnI5AAzIuPyNinI4gEzI+PyNtQ9sDAy7B0a1D2w
UJInb5OCTA4wA5Ivb0PdAwsxYc2f3DFGu7+AdTL+HRop8/lr7X4COJP8eZtm
re85nwfmRcrkbW6pdWCeJP131qY4CO/GBWZPxudtXlPrwHLI+LzNUbsPANJJ
/99Z+53n77ba/QCQRtLzNqf6+OA7Rhy1+wEgncTzNk/usQeuAVxp9wNAGvHn
bYL32ANj/Um7HwDSyNN3aHTeYxf/O7N32n0B0E0e8zaH1Ptu4s/onLT7AiDN
kHvs4n9ef6/dFwBlBMb6+655AYDlClz/22u3C0AZ4v8dGYz1wIqJ//ndg3a7
AJQRGOsfhlwXBLAM4n+n5kG7XQDKkHMW3/cML++6BlYqMNYftdsFoIzIWL/V
bhuAMgL5m6N2uwCUI2RtAVMCY/1Ju10AyhGytoApZG0Be8jaAraQtQXsIWsL
2ELWFrCHrC1gC1lbwB6ytoAtZG0Be8jaAraQtQXsIWsL2EPWFrCFrC1gD1lb
wBaytoA9ZG0BW8jaAvaQtQVsIWsL2EPWFrCFrC1gD1lbwBaytoA9ZG0BW8ja
AvaQtQXsIWsL2ELWFrCHrC1gC1lbwB6ytoAtZG0Be8jaAraQtQXsIWsL2ELW
FrCHrC1gC1lbwB6ytoAtZG0Be8jaAvb4srbabQJQjm+s124TgLLaWVvt9gAo
q35O567O3l3/H5FWs5k=
         "], {{0, 316}, {253, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->{39.88437499999986, Automatic},
       ImageSizeRaw->{253, 316},
       PlotRange->{{0, 253}, {0, 316}}], 
      RowBox[{"=", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["i", "2"]}], 
        FractionBox["g", 
         RowBox[{"cos", " ", 
          SubscriptBox["\[Theta]", "W"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox["g", "V", "f"], 
           SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
          RowBox[{
           SubsuperscriptBox["g", "A", "f"], 
           SuperscriptBox["\[Gamma]", "\[Mu]"], 
           SubscriptBox["\[Gamma]", "5"]}]}], ")"}]}]}]}
    }], ",", "   ", GridBox[{
     {
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
2SnH+X5gXelzP9ftsN9X2SRsw/pqpNLuR0//qoQ6j3nw9b/S7kerP9tAO2fT
vkvn66E+o9ZDtT+buUP2+yFjaz1U+2vtPrX6dn1GrYdqfzODPq0Dbau127UU
fp3JVQ/d9Wet3LeryHyRw2YG713o+vMc3DZEbZstZGVLjm2V8N7f+u3uVevf
PR3Tu5XhOaZS6tvVQNvceuU+99501ye/HXRjU0v/9rBWfO/qgXG/931Yd/7d
yr93d5Haam+zJz+OEVknN9q1sgQD9V6fsl3161HfOlhN3Le+et+d0h4ZPg5Q
K7x3sbF+8G1NnqN9/W/nUveB7RA5mjzjGtuf33XnhROfd90zd0y27vTU++aM
53S1Hzu+eTdh32L789tzakPixzwm28+P9G30e4b/j+tVpC6zvLc9c+xuinVH
wtdmZzu20FNzWZ5/4LWvI69dZ3z+UN1nef6E9YasbJmx3ZTelvfUfdH5MFIT
2fdPI3VffJsWGdO6wBiG6n5duG914DWrkq9pRWAeLLItjWy3i+7jR2qiyHoT
WUc3BfsW2s4UuUZF9sc1J9umyf540L+762WpsbRGjs993kz4WsXWncj+S7Hr
tiT+GWld4LVi+y/F9isCc0ORfXyJ7xP+WLJ/1sjhPM5qotcq/VmiitRE0f5F
5sOsnyUkvq99W7hvsf20rK8r/ed7Jjs2iknWnVzHDGPH1IrWROv1Q9u0LMcM
e+p9O1HfQtu0LPO9pF8vtdJad3HW+7uOvJ9ufR712UL2nwFj60w9Yd/6rgW4
G7tdk/BnleL79IF2hPbxH/3Yr85YH3YJ9T7pe4ns607V875uU2tfhq//mfwe
Kr5NsWt2kq+T8duPqqcetK6N6xvvOrVNst9viG2nH33fQz9faa+/GL3u9NX9
0zp972vkRg6Z71tJy4fWKbVVqG+rhPZtfd+qVt8q/1hfLTz67YBapneg7p/a
V/u+PPXtxv/9XoYzHZV/nXVo3LTXXZy17lxL+n7dKTYz6FvftXrncNsD9WPY
kjef2N7OrzuvExrDtUafkW3debqGPVc9zOqeFn5+y7Fdc/VQafen07eV5Msq
Bo93CPfEWiz/3m5Gzh33c9/2y/j7WOxkpvevafVtLePuufAgCRmuyHPP+v3G
qHVo4+eQbp08+Mfv5l4Lkb65bdutX49Dc+TWb8Pc78xqnyWhb26f7ca/N1s5
3r/ZyeE4RvI5GgnP9Tvt/gIoR/i+KsAU4TurAHMic/0k11gCmF5kridXDyyY
cI88wJzA+QDmemDBInM9WVtgwQLXbTgr7XYBKEP4fhvAnMh1jCvtdgEoIzLX
b7XbBaAcIWsLmBLJ32y12wWgHCFrC5hC1hawh6wtYAtZW8AesraALWRtAXvI
2gL2kLUFbCFrC9hD1hawhawtYA9ZW8AWsraAPWRtAVvI2gL2kLUFbCFrC9hD
1hawhawtYA9ZW8AWsraAPWRtAXvI2gK2kLUF7CFrC9hC1hawh6wtYEtkrv9W
u10AyolkbX+v3S4AZUTyN//i3B2wXM3yt0Ddf0/dA8vULJ8Eav7Rn8+j7oEF
itQ8dQ8sVLN801P399rtA5BXJGfL9TrAQkXO1VP3wELJPls/VPPUPbAgkdxN
SKXdVgDna5a7xJqn7oEFkHCunroHFipyHS51DyyYHN83a4i7r9a1drsBjCPh
nB11DyxUs9yOqHnqHrhQrm5H1vxT3a+0+wDgNHL8vRenIJMDXBgJ3yePugcW
SobzNtQ9sCCSlrdJsdXuC4A0mWreqbX7AmCYpOdtqHtgAeS0vA11D1y4ZrnJ
XPPORrtfAMJkXN4mRaXdNwBhcnrehroHLpj7DF6o5ql7YIZkfN4mFZkcYEbk
vLxNCrJ4wMzIeXkb6h64MDLuHhrUPXChJE/eJgWZHGAGJF/ehroHLsSENb9z
2xjt/gLWyfn30Ej5PH+r3U8Ae5I/b9Ou9Q3788C8SJm8zR21DsyTpH9nbYpa
uDcuMHtyft7mG2oduBxyft7mTrsPANLJ6d9Z+1PgsZV2PwCkkfS8zc5vH9ah
z/La/QCQTvrzNkfn2CV8Xn+l3Q8AaSSct4meY4/M9VvtfgBII8f30Bg8xx7Z
Tqy1+wJgWGverlP30SV8L82tdl8ApBnzeTxynm+t3RcAZUTm+p12uwCUI+F7
b1Ta7QJQhuyv2e+e69tptwtAOZG5ntw8sFCRuf5h6HwfgMsl4ev2N9rtAlCO
HOdymeuBBYvM9WRtgQWT/X2tyd8ARkTyN7V2uwCUI2RtAVMic/1Wu10AyiFr
C9hC1hawh6wtYAtZW8AesraALWRtAXvI2gK2kLUF7CFrC9hD1hawhawtYA9Z
W8AWsraAPWRtAVvI2gL2kLUFbCFrC9hD1hawhawtYA9ZW8AWsraAPWRtAVvI
2gL2kLUF7CFrC9hC1hawh6wtYAtZW8AesraALWRtAXvI2gK2kLUF7CFrC9hC
1hawh6wtYAtZW8AesraALWRtAXvI2gL2kLUFbCFrC9hD1hawhawtYE8oa6vd
JgDlBOb6nXabAJTljt21ztnX2u0BMI1muXb+CwLa78E=
         "], {{0, 316}, {253, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->{45.45624999999981, Automatic},
       ImageSizeRaw->{253, 316},
       PlotRange->{{0, 253}, {0, 316}}], 
      RowBox[{"=", " ", 
       RowBox[{
        RowBox[{"-", "i"}], " ", "e", " ", 
        SubscriptBox["Q", "f"], 
        SuperscriptBox["\[Gamma]", "\[Mu]"]}]}]}
    }]}], TraditionalForm]], "NumberedEquation",
 CellID->104519348]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "V"], "=", 
    RowBox[{
     SubsuperscriptBox["T", "f", "3"], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["Q", "f"], 
      SuperscriptBox["sin", "2"], 
      SubscriptBox["\[Theta]", "W"]}]}]}], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["g", "A", "f"], "=", 
    SubsuperscriptBox["T", "f", "3"]}], TraditionalForm]], "InlineMath"],
 ".  Applying the Feynman rules starting at the \[Mu]-index and working \
around counterclockwise for both diagrams, the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function is:"
}], "Text",
 Deletable->True,
 CellID->345151862],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", " ", 
    SuperscriptBox[
     RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "\[Mu]\[Nu]\[Rho]"]}], "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["e", "2"], "g"}], 
       RowBox[{"2", "cos", " ", 
        SubscriptBox["\[Theta]", "W"]}]], "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Mu]", 
         RowBox[{"2", "\[Epsilon]"}]], 
        RowBox[{"\[Integral]", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[DifferentialD]", "d"], "k"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "d"]], 
          FractionBox[
           RowBox[{"Tr", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["g", "V"], 
                SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
               RowBox[{
                SubscriptBox["g", "A"], 
                SuperscriptBox["\[Gamma]", "\[Mu]"], 
                SubscriptBox["\[Gamma]", "5"]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
              RowBox[{
               RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}]}], "]"}], 
           RowBox[{
            RowBox[{
             RowBox[{"[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
               SuperscriptBox["m", "2"]}], "]"}], "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"k", "-", 
                 SubscriptBox["p", "1"]}], ")"}], "2"], "-", 
              SuperscriptBox["m", "2"]}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              SuperscriptBox["m", "2"]}], ")"}]}]]}]}]}], 
       "\[IndentingNewLine]", "+", 
       RowBox[{
        SuperscriptBox["\[Mu]", 
         RowBox[{"2", "\[Epsilon]"}]], 
        RowBox[{"\[Integral]", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[DifferentialD]", "d"], "k"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "d"]], 
          FractionBox[
           RowBox[{"Tr", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["g", "V"], 
                SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
               RowBox[{
                SubscriptBox["g", "A"], 
                SuperscriptBox["\[Gamma]", "\[Mu]"], 
                SubscriptBox["\[Gamma]", "5"]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
              RowBox[{
               RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}]}], "]"}], 
           RowBox[{
            RowBox[{
             RowBox[{"[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
               SuperscriptBox["m", "2"]}], "]"}], "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"k", "-", 
                 SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
              SuperscriptBox["m", "2"]}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              SuperscriptBox["m", "2"]}], ")"}]}]]}]}]}]}], "]"}], "."}]}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->1892324640]
}, Open  ]],

Cell[TextData[{
 "We will put the photons on shell ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["p", "1", "2"], "=", 
    RowBox[{
     SubsuperscriptBox["p", "2", "2"], "=", "0"}]}], TraditionalForm]], 
  "InlineMath"],
 ", but leave the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Z", "0"], TraditionalForm]], "InlineMath"],
 " off its mass shell with a mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "1"], "+", 
       SubscriptBox["p", "2"]}], ")"}], "2"], "=", "s"}], TraditionalForm]], 
  "InlineMath"],
 ".  In the computations that follow, the prefactor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["e", "2"], "g"}], 
     RowBox[{"2", "cos", " ", 
      SubscriptBox["\[Theta]", "W"]}]]}], TraditionalForm]], "InlineMath"],
 " is dropped."
}], "Text",
 Deletable->True,
 CellID->691109888],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialize ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X:"
}], "MathCaption",
 CellID->1354319061],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<X`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->861283674]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define the on shell kinematic conditions:", "MathCaption",
 CellID->836781195],

Cell[BoxData[
 RowBox[{
  RowBox[{"onShell", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p1", ".", "p1"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p2", ".", "p2"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p1", ".", "p2"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], "s"}]}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1739994125]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initiate integration with ",
 Cell[BoxData[
  ButtonBox["LoopIntegrate",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopIntegrate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", and apply the on shell conditions:"
}], "MathCaption",
 CellID->1560942610],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagram1", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{"Spur", "[", 
       RowBox[{
        SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
        RowBox[{
         RowBox[{"gV", " ", "\[DoubleStruckOne]"}], "-", 
         RowBox[{"gA", " ", "\[Gamma]5"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p1", "-", "p2"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Rho]"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p1"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Nu]"]}], ",", 
        RowBox[{
         RowBox[{"k", ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}]}], "]"}], ",", "k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", "onShell"}]}], 
  ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1102214518],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagram2", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{"Spur", "[", 
       RowBox[{
        SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
        RowBox[{
         RowBox[{"gV", " ", "\[DoubleStruckOne]"}], "-", 
         RowBox[{"gA", " ", "\[Gamma]5"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p1", "-", "p2"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Nu]"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p2"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Rho]"]}], ",", 
        RowBox[{
         RowBox[{"k", ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}]}], "]"}], ",", "k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", "onShell"}]}], 
  ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->233585960]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Globally set option ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["ExplicitC0",
    BaseStyle->"Link",
    ButtonData->"paclet:X/ref/ExplicitC0"], "\[Rule]", "None"}]], 
  "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " to ",
 Cell[BoxData[
  ButtonBox["LoopRefine",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopRefine"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", to leave all scalar C-functions symbolic.  Apply ",
 Cell[BoxData[
  ButtonBox["LoopRefine",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopRefine"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->2141088233],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"LoopRefine", ",", 
     RowBox[{"ExplicitC0", "\[Rule]", "None"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"computedVertexFunction", "=", "\[IndentingNewLine]", 
  RowBox[{"LoopRefine", "[", 
   RowBox[{"diagram1", "+", "diagram2"}], "]"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->834838859],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"14", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"]}], "+", 
     RowBox[{"6", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "14"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"]}], "-", 
     RowBox[{"6", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Mu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"28", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Mu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"28", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Nu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"]}], "s"], "+", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Rho]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"44", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Rho]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "+", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Nu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"44", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"]}], "s"], "+", 
     FractionBox[
      RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "+", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}]}]], "Output",
 ImageSize->{573, 377},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->677540431]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Note that charge conjugation invariance leads to a result that is \
independent of the neutral current vector coupling ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["g", "V", "f"], TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->939142511],

Cell["\<\
This result suffers from two ambiguities.  We'll start by addressing the more \
innocuous problem first.\
\>", "Text",
 CellID->1430944801]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ambiguity #1: Vanishing totally antisymmetric ",
 Cell[BoxData[
  FormBox[
   RowBox[{"rank", ">", "4"}], TraditionalForm]], "InlineMath"],
 " tensor"
}], "Section",
 Deletable->True,
 CellID->1739576479],

Cell[CellGroupData[{

Cell[TextData[{
 "The result we computed in ",
 Cell[BoxData["computedVertexFunction"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " is unique only up to a totally antisymmetric rank-5 tensor.  A family of \
different expressions can be obtained by cyclically permuting the elements of \
the trace (",
 Cell[BoxData[
  ButtonBox["Spur",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/Spur"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ").  Observe the effect of cyclically permuting the vertex factor ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["g", "V"], 
       SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
      RowBox[{
       SubscriptBox["g", "A"], 
       SuperscriptBox["\[Gamma]", "\[Mu]"], 
       SubscriptBox["\[Gamma]", "5"]}]}], ")"}],
    FontColor->RGBColor[0.6509803921568628, 0., 0.]], TraditionalForm]], 
  "InlineMath"],
 " in the first diagram, so that it is on the other side:"
}], "Text",
 Deletable->True,
 CellID->1227100611],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Tr", "[", 
    RowBox[{
     StyleBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["g", "V"], 
         SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
        RowBox[{
         SubscriptBox["g", "A"], 
         SuperscriptBox["\[Gamma]", "\[Mu]"], 
         SubscriptBox["\[Gamma]", "5"]}]}], ")"}],
      FontColor->RGBColor[0.6509803921568628, 0., 0.]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", 
          SubscriptBox["p", "1"], "-", 
          SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", "m"}], 
      ")"}], "Q", " ", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", 
          SubscriptBox["p", "1"]}], ")"}], ".", "\[Gamma]"}], "+", "m"}], 
      ")"}], "Q", " ", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
      RowBox[{
       RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}]}], "]"}], " ", 
   "\[LongRightArrow]", " ", "\[IndentingNewLine]", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", 
          SubscriptBox["p", "1"], "-", 
          SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", "m"}], 
      ")"}], "Q", " ", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", 
          SubscriptBox["p", "1"]}], ")"}], ".", "\[Gamma]"}], "+", "m"}], 
      ")"}], "Q", " ", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
      RowBox[{
       RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}], 
     StyleBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["g", "V"], 
         SuperscriptBox["\[Gamma]", "\[Mu]"]}], "-", 
        RowBox[{
         SubscriptBox["g", "A"], 
         SuperscriptBox["\[Gamma]", "\[Mu]"], 
         SubscriptBox["\[Gamma]", "5"]}]}], ")"}],
      FontColor->RGBColor[0.6509803921568628, 0., 0.]]}], "]"}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->332437474]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Copy the code for ",
 Cell[BoxData["diagram1"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", and manually move the first two arguments of ",
 Cell[BoxData[
  ButtonBox["Spur",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/Spur"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " (",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
   RowBox[{
    RowBox[{"gV", " ", "\[DoubleStruckOne]"}], "-", 
    RowBox[{"gA", " ", "\[Gamma]5"}]}]}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ") to the other side:"
}], "MathCaption",
 CellID->1510777701],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagram1", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{"Spur", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p1", "-", "p2"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Rho]"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "p1"}], ")"}], ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        RowBox[{"Q", " ", 
         SubscriptBox["\[Gamma]", "\[Nu]"]}], ",", 
        RowBox[{
         RowBox[{"k", ".", "\[Gamma]"}], "+", 
         RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
        SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
        RowBox[{
         RowBox[{"gV", " ", "\[DoubleStruckOne]"}], "-", 
         RowBox[{"gA", " ", "\[Gamma]5"}]}]}], "]"}], ",", "k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", "onShell"}]}], 
  ";"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1941662226],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"permutedVertexFunction", "=", 
  RowBox[{"LoopRefine", "[", 
   RowBox[{"diagram1", "+", "diagram2"}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->648501378],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"10", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"]}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "14"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"]}], "-", 
     RowBox[{"6", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["Q", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Mu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Nu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"]}], "s"], "+", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Mu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"28", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p2", "\[Rho]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"36", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"16", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Rho]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
        SuperscriptBox["Q", "2"]}], "s"]}], "-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "+", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["p1", "\[Nu]"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"44", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"]}], "s"], "+", 
     FractionBox[
      RowBox[{"20", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "s"], "+", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "gA", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["Q", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}], "s"]}], ")"}]}]}]], "Output",
 ImageSize->{573, 377},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->1022510685]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Notice that the coefficient of the very first term ",
 Cell[BoxData[
  RowBox[{"10", " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"]}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " has changed.  Compute the difference for greater clarity:"
}], "Text",
 CellID->1820249510],

Cell[CellGroupData[{

Cell["Form the difference:", "MathCaption",
 CellID->1565491099],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"difference", "=", 
  RowBox[{
   RowBox[{"computedVertexFunction", "-", "permutedVertexFunction"}], "//", 
   "Simplify"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->1584769928],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "s"], 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"DiscB", "[", 
      RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p2", "}"}]}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p2", "\[Rho]"], " ", 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["p2", "\[Nu]"], " ", 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p2", "\[Mu]"], " ", 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], ")"}]}]}]], "Output",
 ImageSize->{466, 49},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->1841797494]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Notice that this difference is a totally antisymmteric rank-5 tensor that \
has been twice-contracted into vectors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]], "InlineMath"],
 ".  Remember that tensors are multilinear maps from vectors to numbers, and \
a totally antisymmetric rank-5 tensor can map to a nonzero number only when \
all five vectors are linearly independent.  In four dimensional spacetime, up \
to a maximum of four vectors are linearly independent; the fifth vector can \
be written as a linear combination of the other four.  We should then expect \
this tensor to be vanishing."
}], "Text",
 Deletable->True,
 CellID->847054068],

Cell[TextData[{
 "We can confirm this by contracting the difference tensor into three \
additional vectors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "1"], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "3"], TraditionalForm]], "InlineMath"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "3"], "=", 
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["e", "1"]}], "+", 
     RowBox[{"b", " ", 
      SubscriptBox["e", "2"]}], "+", 
     RowBox[{"c", " ", 
      SubscriptBox["p", "1"]}], "+", 
     RowBox[{"d", " ", 
      SubscriptBox["p", "2"]}]}]}], TraditionalForm]], "InlineMath"],
 " being the linearly dependent vector with scalar coefficients ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->333421041],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["LScalarQ",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LScalarQ"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " to declare coefficients ",
 Cell[BoxData["a"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["b"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["c"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["d"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " as Lorentz scalars:"
}], "MathCaption",
 CellID->174666889],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LScalarQ", "[", "a", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LScalarQ", "[", "b", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LScalarQ", "[", "c", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LScalarQ", "[", "d", "]"}], "=", "True"}], ";"}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->544068545]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Multiply the difference tensor by ",
 Cell[BoxData[
  SubscriptBox["e1", "\[Mu]"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  SubscriptBox["e2", "\[Nu]"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData[
  SubscriptBox["e3", "\[Rho]"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ".  Replace vector ",
 Cell[BoxData["e3"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " with the linear combination.  ",
 Cell[BoxData[
  ButtonBox["Contract",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/Contract"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " the indices, and apply the kinematic on shell conditions:"
}], "MathCaption",
 CellID->1179382939],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Contract", "[", 
   RowBox[{
    RowBox[{"difference", " ", 
     SubscriptBox["e1", "\[Mu]"], 
     SubscriptBox["e2", "\[Nu]"], 
     SubscriptBox["e3", "\[Rho]"]}], "/.", 
    RowBox[{"{", 
     RowBox[{"e3", "\[Rule]", 
      RowBox[{
       RowBox[{"a", " ", "e1"}], "+", 
       RowBox[{"b", " ", "e2"}], "+", 
       RowBox[{"c", " ", "p1"}], "+", 
       RowBox[{"d", " ", "p2"}]}]}], "}"}]}], "]"}], "/.", 
  "onShell"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->614993963],

Cell[BoxData["0"], "Output",
 ImageSize->{11, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->629404634]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "These extra pieces may make intermediate results more verbose.  But \
ultimately, when the computed vertex function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], TraditionalForm]], 
  "InlineMath"],
 " is embedded into a larger physical calculation where all tensors have been \
contracted, the extra vanshing contributions generated by ",
 Cell[BoxData[
  ButtonBox["Spur",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/Spur"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " will drop out.  "
}], "Text",
 Deletable->True,
 CellID->2119505685]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ambiguity #2: Artifical violations of the Ward identity", "Section",
 CellID->1867746437],

Cell[CellGroupData[{

Cell["\<\
A more serious problem with the calculation is that it does not satisfy the \
Ward identities implied by electromagnetic gauge invariance.  These \
identities are:\
\>", "Text",
 CellID->692712690],

Cell[BoxData[
 FormBox[
  TagBox[
   StyleBox[
    RowBox[{"{", 
     StyleBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "\[Mu]\[Nu]\[Rho]"], 
           SubscriptBox["p", 
            RowBox[{"1", "\[Nu]"}]]}], "=", "0"}]},
        {
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "\[Mu]\[Nu]\[Rho]"], 
           SubscriptBox["p", 
            RowBox[{"2", "\[Rho]"}]]}], "=", "0"}]}
       }],
      ShowAutoStyles->True]}],
    ShowAutoStyles->False],
   #& ], TraditionalForm]], "NumberedEquation",
 CellID->536532277]
}, Open  ]],

Cell[TextData[{
 "We can check these by contracting ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["p", "1", "\[Nu]"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["p", "2", "\[Rho]"], TraditionalForm]], "InlineMath"],
 " into the vertex function."
}], "Text",
 CellID->804006176],

Cell[CellGroupData[{

Cell[TextData[{
 "Contract ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["p", "1", "\[Nu]"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["p", "2", "\[Rho]"], TraditionalForm]], "InlineMath"],
 " into the vertex function, and apply the on shell conditions:"
}], "MathCaption",
 Deletable->True,
 CellID->1078874899],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Index", " ", "\[Nu]"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Contract", "[", 
      RowBox[{"computedVertexFunction", " ", 
       SubscriptBox["p1", "\[Nu]"]}], "]"}], "/.", "onShell"}], "//", 
    "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Index", " ", "\[Rho]"}], "*)"}], " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Contract", "[", 
      RowBox[{"computedVertexFunction", " ", 
       SubscriptBox["p2", "\[Rho]"]}], "]"}], "/.", "onShell"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1445995872],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
  SuperscriptBox["Q", "2"], " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]]}]], "Output",
 ImageSize->{140, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->866335895],

Cell[BoxData[
 RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
  SuperscriptBox["Q", "2"], " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]]}]], "Output",
 ImageSize->{132, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->568260605]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The Ward identities require these expressions to vanish, so something has \
gone awry in the computation.  Let's parametrize the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function in the following way:"
}], "Text",
 Deletable->True,
 CellID->276667481],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", " ", 
    SuperscriptBox[
     RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "\[Mu]\[Nu]\[Rho]"]}], " ", 
   "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "1"], 
     SubsuperscriptBox["p", "1", "\[Mu]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Nu]\[Rho]\[Alpha]\[Beta]"]}], "+", 
    RowBox[{
     SubscriptBox["F", "2"], 
     SubsuperscriptBox["p", "2", "\[Mu]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Nu]\[Rho]\[Alpha]\[Beta]"]}], "+", 
    RowBox[{
     SubscriptBox["F", "3"], 
     SubsuperscriptBox["p", "1", "\[Nu]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Rho]\[Alpha]\[Beta]"]}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["F", "4"], 
     SubsuperscriptBox["p", "2", "\[Nu]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Rho]\[Alpha]\[Beta]"]}], "+", 
    RowBox[{
     SubscriptBox["F", "5"], 
     SubsuperscriptBox["p", "1", "\[Rho]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Nu]\[Alpha]\[Beta]"]}], "+", 
    RowBox[{
     SubscriptBox["F", "6"], 
     SubsuperscriptBox["p", "2", "\[Rho]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Beta]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Nu]\[Alpha]\[Beta]"]}], "+", 
    RowBox[{
     SubscriptBox["G", "1"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Alpha]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Nu]\[Rho]\[Alpha]"]}], "+", 
    RowBox[{
     SubscriptBox["G", "2"], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Alpha]"}]], 
     SuperscriptBox["\[Epsilon]", "\[Mu]\[Nu]\[Rho]\[Alpha]"]}]}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->1753847449]
}, Open  ]],

Cell["\<\
To diagnose the problem, it is useful to note the superficial UV degrees of \
divergence of the varous form factors:\
\>", "Text",
 Deletable->True,
 CellID->819122462],

Cell[BoxData[GridBox[{
   {Cell["Quantity", "TableHeader"], Cell[
    "Superficial degree of divergence", "TableHeader"]},
   {Cell[TextData[{
     Cell[BoxData[
      FormBox[
       SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], 
       TraditionalForm]], "InlineMath"],
     " (Full integral)"
    }], "TableText",
     Deletable->True], Cell["+1 (linearly divergent)", "TableText"]},
   {Cell[TextData[{
     Cell[BoxData[
      FormBox[
       SubscriptBox["F", "1"], TraditionalForm]], "InlineMath"],
     "\[LongDash]",
     Cell[BoxData[
      FormBox[
       SubscriptBox["F", "6"], TraditionalForm]], "InlineMath"]
    }], "TableText",
     Deletable->True], Cell["\[Dash]2 (finite)", "TableText"]},
   {Cell[TextData[{
     Cell[BoxData[
      FormBox[
       SubscriptBox["G", "1"], TraditionalForm]], "InlineMath"],
     ", ",
     Cell[BoxData[
      FormBox[
       SubscriptBox["G", "2"], TraditionalForm]], "InlineMath"]
    }], "TableText",
     Deletable->True], Cell["  0 (logarithmically divergent)", "TableText"]}
  }]], "DefinitionBox",
 CellID->1152923733],

Cell["Superficial UV degrees of divergence.", "Caption",
 CellID->444233650],

Cell[TextData[{
 "Form factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "1"], TraditionalForm]], "InlineMath"],
 "\[LongDash]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "6"], TraditionalForm]], "InlineMath"],
 " are UV convergent, so their forms are unambiguous. But form factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "2"], TraditionalForm]], "InlineMath"],
 " are superficially logarithmically divergent.  So, their precise forms \
depend on the UV regulator.  Within dimensional regularization they will \
especially depend on how ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "5"], TraditionalForm]], "InlineMath"],
 " is treated.  Since ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X's ",
 Cell[BoxData[
  ButtonBox["\[Gamma]5",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/DiracG5"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 "  anticommutes with all other gamma matrices, which is techincally \
inconsistent within dimensional regularization, we can expect that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "2"], TraditionalForm]], "InlineMath"],
 " are incorrect, leading to the violations of Ward identities."
}], "Text",
 CellID->1543004124],

Cell[TextData[{
 "Next, we will apply Adler's method to correct the form factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "2"], TraditionalForm]], "InlineMath"],
 ".  We will determine them in terms of the unambiguous form factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "1"], TraditionalForm]], "InlineMath"],
 "\[LongDash]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "6"], TraditionalForm]], "InlineMath"],
 " by requiring that the QED Ward identities be satisfied at the \[Nu] and \
\[Rho] vertices."
}], "Text",
 CellID->1340610167],

Cell[TextData[{
 "Let's start by storing the form factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "1"], TraditionalForm]], "InlineMath"],
 "\[LongDash]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "6"], TraditionalForm]], "InlineMath"],
 ", by extracting the coefficients of the multiplying tensors.  We are not \
storing ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "2"], TraditionalForm]], "InlineMath"],
 " since we will correct them."
}], "Text",
 CellID->314308181],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Coefficient",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Coefficient"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " to extract the form factors, and store them as ",
 Cell[BoxData["F1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 "\[LongDash]",
 Cell[BoxData["F6"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->919033939],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"F1", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p1", "\[Mu]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F2", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p2", "\[Mu]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F3", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p1", "\[Nu]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F4", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p2", "\[Nu]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F5", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p1", "\[Rho]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F6", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"computedVertexFunction", ",", 
     RowBox[{
      SubscriptBox["p2", "\[Rho]"], 
      SubscriptBox["\[CurlyEpsilon]", 
       RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
        RowBox[{"{", "p1", "}"}], ",", 
        RowBox[{"{", "p2", "}"}]}]]}]}], "]"}], "//", 
   "Simplify"}]}]}], "Input",
 CellLabel->"In[16]:=",
 CellID->1584632645],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{415, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[16]=",
 CellID->151606924],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{415, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->1141966326],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"11", "+", 
     RowBox[{"5", " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "s"]], "Output",
 ImageSize->{414, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->966687843],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"3", " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "s"]], "Output",
 ImageSize->{407, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->1408787746],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{415, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[20]=",
 CellID->1488438847],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"5", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{422, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->154697626]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define a modified vertex function, with but with form factors ",
 Cell[BoxData["G1"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["G2"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " left symbolic."
}], "MathCaption",
 CellID->672974682],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modifiedVertexFunction", "=", 
  RowBox[{
   RowBox[{"F1", " ", 
    SubscriptBox["p1", "\[Mu]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"F2", " ", 
    SubscriptBox["p2", "\[Mu]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"F3", " ", 
    SubscriptBox["p1", "\[Nu]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"F4", " ", 
    SubscriptBox["p2", "\[Nu]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"F5", " ", 
    SubscriptBox["p1", "\[Rho]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"F6", " ", 
    SubscriptBox["p2", "\[Rho]"], 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]]}], "+", 
   RowBox[{"G1", " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}]}]]}], "+", 
   RowBox[{"G2", " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p2", "}"}]}]]}]}]}]], "Input",
 CellLabel->"In[22]:=",
 CellID->58244879],

Cell[BoxData[
 RowBox[{
  RowBox[{"G1", " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}]}]]}], "+", 
  RowBox[{"G2", " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p2", "}"}]}]]}], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Rho]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "+", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Nu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Mu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Mu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Rho]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"5", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "+", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Nu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"5", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{533, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->1152203895]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Let us now check what conditions the electromagnetic Ward identities impose \
on form factors ",
 Cell[BoxData["G1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["G2"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "Text",
 CellID->2001459442],

Cell[CellGroupData[{

Cell[TextData[{
 "Contract ",
 Cell[BoxData[
  SubscriptBox["p1", "\[Nu]"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData[
  SubscriptBox["p2", "\[Rho]"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " into the vertex function to form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], 
     SubscriptBox["p", 
      RowBox[{"1", "\[Nu]"}]]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], 
     SubscriptBox["p", 
      RowBox[{"2", "\[Rho]"}]]}], "=", "0"}], TraditionalForm]], "InlineMath"],
 ", and apply the on shell conditions:"
}], "MathCaption",
 CellID->657175523],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"wardID\[Nu]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Contract", "[", 
     RowBox[{"modifiedVertexFunction", " ", 
      SubscriptBox["p1", "\[Nu]"]}], "]"}], "/.", "onShell"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"wardID\[Rho]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Contract", "[", 
     RowBox[{"modifiedVertexFunction", " ", 
      SubscriptBox["p2", "\[Rho]"]}], "]"}], "/.", "onShell"}], "//", 
   "Simplify"}]}]}], "Input",
 CellLabel->"In[23]:=",
 CellID->1337988941],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "G2"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "gA", " ", 
     SuperscriptBox["Q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", 
        RowBox[{"DiscB", "[", 
         RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"], " ", 
        RowBox[{"ScalarC0", "[", 
         RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
         "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 ImageSize->{529, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->1800108758],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "G1"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "gA", " ", 
     SuperscriptBox["Q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", 
        RowBox[{"DiscB", "[", 
         RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"], " ", 
        RowBox[{"ScalarC0", "[", 
         RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
         "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 ImageSize->{529, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[24]=",
 CellID->678276770]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We now demand that the Ward identities be satisfied by requiring these \
expressions to vanish.  This will imply a condition on the undetermined form \
factors ",
 Cell[BoxData["G1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["G2"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 "."
}], "Text",
 CellID->393059771],

Cell[CellGroupData[{

Cell[TextData[{
 " Use ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " to obtain ",
 Cell[BoxData["G1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["G2"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->195876478],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newFormFactors", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wardID\[Nu]", "\[Equal]", "0"}], ",", 
       RowBox[{"wardID\[Rho]", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G1", ",", "G2"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellLabel->"In[25]:=",
 CellID->2016950052],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"G1", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
     SuperscriptBox["Q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", 
        RowBox[{"DiscB", "[", 
         RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"], " ", 
        RowBox[{"ScalarC0", "[", 
         RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
         "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"G2", "\[Rule]", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "gA", " ", 
     SuperscriptBox["Q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", 
        RowBox[{"DiscB", "[", 
         RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"], " ", 
        RowBox[{"ScalarC0", "[", 
         RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
         "]"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 ImageSize->{455, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[25]=",
 CellID->160397908]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Update ",
 Cell[BoxData["correctedVertexFunction"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " with the newly determined ",
 Cell[BoxData["G1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["G2"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->576731523],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"correctedVertexFunction", "[", 
   RowBox[{"gA_", ",", "Q_", ",", "m_"}], "]"}], "=", 
  RowBox[{"modifiedVertexFunction", "/.", "newFormFactors"}]}]], "Input",
 CellLabel->"In[26]:=",
 CellID->1533008150],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p1", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"3", " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "gA", " ", 
   SuperscriptBox["Q", "2"], " ", 
   SubscriptBox["\[CurlyEpsilon]", 
    RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]", ",", 
     RowBox[{"{", "p2", "}"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"3", " ", 
      RowBox[{"DiscB", "[", 
       RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"ScalarC0", "[", 
       RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
       "]"}]}]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Rho]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "+", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Nu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Mu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Mu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"3", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p2", "\[Rho]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Nu]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"5", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"], "+", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "gA", " ", 
    SuperscriptBox["Q", "2"], " ", 
    SubscriptBox["p1", "\[Nu]"], " ", 
    SubscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", ",", "\[Rho]", ",", 
      RowBox[{"{", "p1", "}"}], ",", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"5", " ", 
       RowBox[{"DiscB", "[", 
        RowBox[{"s", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"ScalarC0", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
        "]"}]}]}], ")"}]}], "s"]}]], "Output",
 ImageSize->{533, 256},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[26]=",
 CellID->88285350]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We now have the corrected vertex function that satisfies the QED Ward \
identities at indices \[Nu] and \[Rho]:\
\>", "Text",
 CellID->781433646],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Index", " ", "\[Nu]"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Contract", "[", 
     RowBox[{
      RowBox[{"correctedVertexFunction", "[", 
       RowBox[{"gA", ",", "Q", ",", "m"}], "]"}], " ", 
      SubscriptBox["p1", "\[Nu]"]}], "]"}], "/.", "onShell"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Index", " ", "\[Rho]"}], "*)"}], " ", 
   RowBox[{
    RowBox[{"Contract", "[", 
     RowBox[{
      RowBox[{"correctedVertexFunction", "[", 
       RowBox[{"gA", ",", "Q", ",", "m"}], "]"}], " ", 
      SubscriptBox["p2", "\[Rho]"]}], "]"}], "/.", "onShell"}]}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->2089837909],

Cell[BoxData["0"], "Output",
 ImageSize->{11, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[27]=",
 CellID->1426885377],

Cell[BoxData["0"], "Output",
 ImageSize->{11, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]=",
 CellID->712645190]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "This accounts for the limitation of ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X's implementation of ",
 Cell[BoxData[
  ButtonBox["\[Gamma]5",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/DiracG5"]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " in dimensional regularization. Next we must check the Ward identity at the \
\[Mu] index by confirming the anomaly cancellation associated with weak \
neutral currents in the standard model."
}], "Text",
 CellID->1135221086]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ward identity at the \[Mu] index, and anomaly cancellation\
\>", "Section",
 CellID->1183444188],

Cell[CellGroupData[{

Cell[TextData[{
 "The Ward identity associated with weak interactions is more complicated due \
to its associatation with the spontaneous breakdown of the standard model \
gauge symmetry.  The continuity equation satisfied by the weak neutral \
current ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["J", 
    RowBox[{"n", ".", "c", "."}], "\[Mu]"], TraditionalForm]], "InlineMath"],
 " is related to the pseuoscalar density "
}], "Text",
 CellID->160907084],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Mu]"], 
    SubsuperscriptBox["J", 
     RowBox[{"n", ".", "c", "."}], "\[Mu]"]}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], "i", " ", 
    RowBox[{
     SubscriptBox["\[Sum]", "f"], " ", 
     RowBox[{
      SubsuperscriptBox["g", "A", "f"], 
      SubscriptBox["m", "f"], 
      OverscriptBox["f", "_"], 
      SubscriptBox["\[Gamma]", "5"], "f"}]}]}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->808821658]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "which in momentum space leads to the desired Ward identity for the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function,"
}], "Text",
 CellID->528517950],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "1"], "+", 
       SubscriptBox["p", "2"]}], ")"}], "\[Mu]"], 
    SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"]}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], "i", " ", 
    SubscriptBox["m", "Z"], 
    RowBox[{
     SubsuperscriptBox["\[CapitalGamma]", "G", "\[Nu]\[Rho]"], "."}]}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->1836386929]
}, Open  ]],

Cell[TextData[{
 "In the left hand side, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], TraditionalForm]], 
  "InlineMath"],
 " is the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function computed above, summed over all standard model fermions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", "f"], 
     SuperscriptBox[
      RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "\[Mu]\[Nu]\[Rho]"]}]}], 
   TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 CellID->1044910464],

Cell[CellGroupData[{

Cell[TextData[{
 "Contract the ",
 Cell[BoxData["correctedVertexFunction"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " with ",
 Cell[BoxData[
  SubscriptBox[
   RowBox[{"(", 
    RowBox[{"p1", "+", "p2"}], ")"}], "\[Mu]"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", and store the result as ",
 Cell[BoxData["LHS1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ".  This gives the contribution from a single fermion flavor, dependent on \
",
 Cell[BoxData["gA"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["Q"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", and ",
 Cell[BoxData["m"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->915570038],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LHS1", "[", 
   RowBox[{"gA_", ",", "Q_", ",", "m_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Contract", "[", 
     RowBox[{
      RowBox[{"correctedVertexFunction", "[", 
       RowBox[{"gA", ",", "Q", ",", "m"}], "]"}], " ", 
      SubscriptBox[
       RowBox[{"(", 
        RowBox[{"p1", "+", "p2"}], ")"}], "\[Mu]"]}], "]"}], "/.", 
    "onShell"}], "//", "Simplify"}]}]], "Input",
 CellLabel->"In[29]:=",
 CellID->810647458],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
  SuperscriptBox["Q", "2"], " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
      "]"}]}]}], ")"}]}]], "Output",
 ImageSize->{372, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->50393826]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Consider just one generation of standard model fermions (the minimal set \
required to ensure anomaly cancellation), consisting of three colors of up \
and down quarks, the neutrino and the electron.  Accounting for their \
differing charge and masses, the sum gives the LHS of the Ward identity:\
\>", "MathCaption",
 CellID->838725048],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LHS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"3", 
     RowBox[{"LHS1", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}], ",", "mu"}], "]"}]}], "+", 
    RowBox[{"3", 
     RowBox[{"LHS1", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}], ",", "md"}], "]"}]}], "+", 
    RowBox[{"LHS1", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "0", ",", "m\[Nu]"}], "]"}], "+", 
    RowBox[{"LHS1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "me"}], "]"}]}], "//", "Simplify"}]}]], "Input",
 CellLabel->"In[30]:=",
 CellID->2077378111],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "3"], " ", "\[ImaginaryI]", " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["md", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "md", ",", "md", ",", "md"}], 
      "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["me", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "me", ",", "me", ",", "me"}], 
      "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "mu", ",", "mu", ",", "mu"}], 
      "]"}]}]}], ")"}]}]], "Output",
 ImageSize->{494, 50},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]=",
 CellID->876412950]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "In the RHS of the Ward identity is ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[CapitalGamma]", "G", "\[Nu]\[Rho]"], 
   TraditionalForm]], "InlineMath"],
 ", the ",
 Cell[BoxData[
  FormBox["G\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function involving the neutral Goldstone boson (also summed over \
all standard model fermions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[CapitalGamma]", "G", "\[Nu]\[Rho]"], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", "f"], 
     SubsuperscriptBox[
      RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "G", "\[Nu]\[Rho]"]}]}], 
   TraditionalForm]], "InlineMath"],
 "), which needs to be calculated.  For a given fermion flavor, the two \
diagrams contributing to the ",
 Cell[BoxData[
  FormBox["G\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function are:"
}], "Text",
 Deletable->True,
 CellID->59472774],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
8vXEusfnXZeux4l1v0rZz/2J7/mHJb7nlbp/OLHut0t9z1PdN+nvtZ59H3O/
5PccAM4V54vMfZwYgPPFnK1hLZRnpctWK+dsssFzcsH0/Kv02LvS7QrAsqV9
j95V5H7T35UuJ5SWrt9OyUeaLCYjTLlY33ykLTe5Ll2njvX+I/y6J+/S3vOr
Aeu+mPc81X0TTs//6+6W8p4DwFAyc0ji/35aulwADKvhXpBd6XJlyjmLbDCc
mQtWzhP76tvS7QrAMqVMsMu+R9GL0uWFUlI+NFROkLv2e1u6ji11fx6GzUMX
k5mka/ah8tC6ben6Han7dqR6f+3a1ylU7/i3fjtS3eM8wlWtswoAObHvmOlP
fipdLhjL/viP9/7Xvf89NPcb79J15ts5Xw9DH2lcMbee6G5u94PMIRsMA+WC
6VybuY8rALAcLesAWE+UixUesrEu+VDMPG5SplJ11/H5N3PLDVK/tWvecxt+
r/dt6Lb2aGybV6XrWqt3n7mCX8OvfRUP73fTeEDuuXN7z686vm/Vuld1zVJn
l4eHh75V1/Lf1+p936PNjAUBsGoNa9FYh4bVSf2G/6HjdWDuevLt3PoD0FXa
h+hbyxyDuD/Rm9LlrJS3aDYYBswFK+e8Kt2uAKxH+u2u/56/L10uKOHItdsu
ZQLXXfpz4SFj/HAke5hNVhSOZ2Mx+3t1rLypv3wdjudl16XrXCnvsWwsts3R
PDM8ZE3H3vP7uWRF4XgOftg3cXPkPFcd3/Ob0nWulPnY3/r9sbqnz86rcHx/
wpP6fQCwFPHe0rnPH4FzpOu+7ZFrvq7iObal6wRdtexF1GoG5S6WDR7pb+of
AjALDf24onv0QglpjL8tw9uceN5j/cji+WBozwVjJnh14nk3R/Ki68L1PpYL
bk95bzq85z9m8J635YI/zqj78yPv+U3JeqcytvXT7k/5XIZfmXhbm+r/AbA6
MQO0Dg1r1eG6/hzxunNTuo6wVqXGOY/0NxfTL0x9+03pcgAwjoZ+3PfS5YKp
HclJtgO9xlVLDnVTsO5N162Drf0ZHtbOaWrfTcG6N+0zN8g6kKF9L7timXAq
131DuW6HKFd4yNqb3vNi64uGh7y6MQseqG1vWv6mrkrVHQDGkNaYs54oqxP6
ZYI34ff9FuL/vuv43NmtvQ9rUCIbbBlfWVou+GEOYxcAjKehH/exdLlgSqF5
7tiPoXOrI7nB5H3C8JCJNuVWVyO8Vq5vXWQOXWjeW/Fm6PLUrquLZ8It4xSD
fgZDex6+KVDvP1o+g4OWp6VP+LXEew4AY9n3Hz9l+pQvao9503MtOn1SiknX
cfcdc72fjpwv3jPXdL9g0X4BrNnU2WBLH3BRuWCqS7381yO/V8/i/laZ/Stf
D3Dup5lzz2ZfTIBSMt+NuyG+d2EpUlbwLxuu3Ua7bgv5fHDyOUUNuc1o94SF
5nzwduJ6X03dJw8P9w/nXnOQuZk9ytGUiV6P9HpN2fv9WJ+zlrLkxmRG66O1
9A23E9f7sBbW3dh9OgAuT1x3ptaf/Hbk8a8zz/n5vLSnlX0KKSJ0zwQfXdt2
PP9Vw/WofBBGMGU22NL3W1wumOoz3VjJk/Ci4bpgkPuFGu5hsp8WcPEy373f
9cW4BJWx8n8zZU5Se/1cXjJZRtaQEY1+zRqa13TcTFj3u1wff4LXvSmZkYXm
eXMfCr3udsL3vGk/0VE/dy19xKsJ616ft3o91WsDsG5pPK8+1va+w/Pqe95b
g5RiQvdMMF7LX4XMPX89X69t7f1t6faANcjsoTTaPIiWPt8ic8FUp/p41Wjj
JeneoGPrCZx0ndBwneLaA7h4Dd+Pn0qXC8YUuu0l/y8mKstVQzlGn0dW8rXT
6z/qT0+VkTVct08yZzM07/M3ajZXef3cfcp3E732puHvbfR+Uku7by+03Sd5
bQDWr2Edmtb78Gv90Hhv6ospygp1oXsmeFvtK+T6Mie89lVm7H2Se9dg7dL6
lPW5Yp/HmCfWML6w6Fww1evm3O+5ju9Vbq+rnJPmshw5v3XzgIuV1mtxzwQX
IXTLBA/+ywnL9ahfOfb1Y2ies3g38XuS64ePOm8yNK9pOtlejw1ZTXQ98us2
rSV6NWHdH/UvwgT7mod8NjfZvn+h0LzJUq8LwOXIzP/7fuTxzyrzA+Jzn5Wu
A5cnXY835XK/9Y9CJqfL9eFOLMds1t6HNWgY58z5PMjrrTQXTHUb5Huuw3v2
qToeHdrXF+09Zt3ymbBuHnDRMv24ne9F1ib0ywSL3KfZ0B8c5Tqypf9ZYq/D
TUP734z0ek254GQZUaUsl7zvXfY9GGv8I+TzyBJ/5xe7zyMA65RZr611T6CU
Cx76oNarYXKp/3HXoT9413atOOSYeWhez2Vbur2AZi197MXngql+g33Ptb7O
w3XBl9p/ezNUnteSDZ61hyHAkjX0476ULhcMJZyWCZbKDJ5PcT0Z2tetmWze
XK1M9X3Q/swHh8wvQnMuWOSaPTSvcflj6Kyopc8yeSaaytO079/g+WBozgUn
WcM1U567Kf7+QnMuOPn3GwDr1TDell2fK80DOMwXPLofIQwpDJQJVs63rT93
gPLlynNVuu2Ax1r62KvIBVMdB/2ea3ydh7zvY+2/PW2ZO/im5/mbskHrFgAX
q2G9ZeuJsnihXyYYc4O/N4ex8yPXltsBzt+23/1N4fesKcP4OsR7kbumrbgu
WO+mvPJndhXOzMnS30JufuKhv3JVsO43LeUa4j1/3va5Kljvpkx4l96rs7PR
I3/r21J1B2B9wuO9nLLr0Oz/28vKGF+vMT04Rxg4E6yc91H/YoCy5q6Pt6Xb
EPjdkbGbVeSCqZ6Df89lX6dhPDrk9zPuPa+lIRs0ZxC4aA39uBe1xzTN4W7i
u5ViQv9M8Co9b5P5902hOrRdY8Y84fqEc7460h++mcl717bfx5/v1wnted9y
3t7tuZD3/Njfwiz6Kw3jH9Wc7JT3/Co0z0XdhQn2NuxQxrZM+OR5o6nuTVnw
LP7WAViXzD39j9YJrd2T+rJ0mbkM6bqorQ907vX2tn6ugcr86NqwdFsCvxzp
v8+inz1gXR/110d5neZs8FnL+POLHufPZYPmDAIXLdOP+3bk8a8b5nN/S9+z
9imkiA45SGvGFGaUDabytF1rHq43b9LjHl13pj7lq5SP3B9rj9LvX+19bMsH
D7nO26b3p1L3mw6fh+vSda69523lPbznsW7ZXKtH3WfVX8n1N2ru0nt+1XKO
q9SGbbnYLHLBSpnb8sHD+/Sh6bOeqfvdUv7WAViHLuvQVO75/9ZnHA9Ola6N
jl1fnpwJVl5nWz/nQOXPlf1V6XYFLisXTPWtj8/cTV6GJ+HzuXNT4mPNawH4
JTzs9VD/Xj2650P4tW+8NUgpLpyZCVbOs8k8flO4bm1rAg6lyP6CHd7TLn35
enZ03+Pxg6xZOULdn/esx11F1+d8bfo7KFz37Yn1vuvxdzLIep0D1/sqHM/D
q+/dqXWf3d86AMvXsNbX0/RvTyvjeV/cn8/YwkSZYOX1Hl2/DlSP3D70RfbJ
Bn4Jl5cLXmXqeTN5OR7WJM9lg9+7zlHJ5IuuSYCL1tCPa13fpZYnfnffJ6WE
gTLByvk2medtZlLPY/OgTvF17tet4SEbvR+h7rPLhzLvedt6mOfYlq7fkbpv
RnrP4/fErLOxEd/z2J6b0vUDYJ0y941+Sf/9RZonePjvn0uXlfUKE2eCldfd
1l9jwHPXr4nvSrczXLJwYblgqvPbTF2vi5Tl92uK3vNVamvgmeMCXLxMP+77
kcc/q3wXu++TIsLAmWDlvJvM8zel61sr391AOcF16fqM9H4fczen93TC97zX
38IcDPieH9bknG0WXKv31YDveaz7tnSdAFivhnVo3jWsM+oefQYXuq83Msp9
YmHcbPDR/aGl2xsuVbjAXDDV+z5T3yJ965DfL/DPe5KOPLc+z8V+WMBFS+u7
dF6nOeWChyzx0d7yMLYwUiZYOf8mc55N6XpnynmVso6uaxDu0vXczRzr07Pu
17k+coe6f1jytXrlPc9dlx+r+7bv38KcnPie78KvPSkXkQm2vOen5KNfU7st
su4ALEfDOF3TnkDu02cwPfqGP9LjRrkuCuNmg6OdG+guXG4umKv3bbHyPIxj
f2+4vji2Bl71euVN6bYFKK2hH/e64bHV9WCO7kcIQ+rR7zspE6y8ziZzvk3p
+ndom01qn5zNqe0xd6lub1M9Y4ZyFx4ypEPdX62x7uEhM7pOdbwNv+87d7PW
uqfP+quGelff+zXW/Xn6rN9k6n1wqLs8EIDJxHtGG8boYt/xTe6/ly4zy9aj
bzhqJlgpz7b+2gOe+3pp/VNYm9C+78Oac8H4XXs/t++gOKel4bqjca5Let4X
1yEAvzT04x7NqQ4P+70e7stwbwWT6dHvOysTrLzeZm7XPQAAMEcN69D8tsZM
eLyHReP9qNBmbplgpVxjZoP6p1BQaF+veLW5YEvd74qXK7+WeeOYduY5rfML
AS5FZh72o3VCw+/7RPj+ZBJTZ4KV19X3AgCADkJ+T8F3tcfk1qqxPwWd9ewb
TpYJVso3Zjb4Sv8UyrjwXPBtQ703pcv2s3zNa5dn1y2vzDX8XLrsAHPQsR/3
vrIezIvSZWb9SmWCldeXDQIAQAeV/mLjPfstcwuz9/ZDVXhYU/O+RN+wRxnH
zAZHOzfQ7MJzweuGen8oXbY/y5gf086uF7r/b88q//6sdNkB5qCtH5f6b4d7
ML747mRspTPBSjlkgwAA0EFmHZovDY/L7WWRvbcfoiVkgpWyjpkNPsonSr83
sHYXngs27a34NcxsX/s0jyWXD76sPe4wZ7B1P0KAS5LZ9+FL+u8vat+v5lsz
mrlkgpXyyAYBAOCIhv1+3jc89mWXe/thSZlgpcxjZoNf6+PzpesLa3apuWD8
Pt27W1K9G9Ysr+95fJgz+N16BQAPGvpx71rmZJs3yKDmlglWyiUbBACAIxrG
5F63PD53f7/97PlpiZlgpeyjZINprP5R/UvXF9bqEnPB9D2zyHq3rFn+5zh2
Zd0CaxUAJA39uKZ9XH2HMpi5ZoKV8skGAQDgiMw6NK17CO7/7U3bvf2Zx790
j//6pf5XfW5czt1c+2UjZoOvMu1wXbq+sEZzz8fSWNp1KuddS1nj9+nt3tum
78z0vfu2w3dv8XofbZdf64W2zX8xZxCgIuT3e9ilezlzfTbrvXCWuWeClXLK
BgEAoEXDvfrZvQZrz6vvT5hdoyad/5t7VNcr9bvaxrdnnwlW6jJWNvjovKX6
ybBmc84F03flbYfvyqHF795Z7S+YbZ/8muWHPPCwXsGb0uUEmIuWOdfV9Zhz
94A2rg8DTZaSCVbKKxsEAIAWDXtRZPcarD0vt37No+elx7k/dYXWlAlW6jRW
NvhhjPMCv8w1F4yv2/G7cmixzm9Lvy+92qp9HTzXEgAVDf24d7XH5Ppsjeu9
QN3SMsFKuWWDAADQomEdmqP3kqb7VOtzB79X5w7u//8vgr0IV2eNmWClbmNl
g/X2uitdV1iTGeeCj+4LmCgTjN9ls58r+Ki98uvfHZgzCFAR78vMfFc+rT2m
aW6h9ZlptdRMsFJ+2SAAALRoWBu0U1+x4T7Uz6kP+iKtAXZ0DiLLEPt7HTPB
+71Xpct7Yh1lg7Awc8wF03hal/1Xv6byb2s+dPy+rYrrlV4vMRP8re3y1yXm
DALUZL4vs/tCNNwLar8HspaeCVbqIRsEAIAGlXl9vfYarDz/sJdg0z3+nc/F
fKVMsG3svZoJXpcu75l1lQ3Cgsw0F3x+ZDwtfle+7TqWlsa23mbyw23675vS
78Og7Ze/78icQYCKhn5c9p7MkN/P1T0X/GYtmWClPrJBAABo0LAOTa97SBv6
pT9zwer6oizPJWWClTqPlQ0+asfSdYWlS7nYknLBH2v5rhy1DffXDsavAdo1
3EfRuC9Ew/2c9n1gdZlgpV6yQQAAaJDyu3of8cUJ53lZ629ao2bBLjETrNR9
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
+YN9c0HzhBhVkA2e03ZxHOntCWNEP9J3xYfU/gd3PcakrkrXn0E+Q4/GCkuX
CS5F2l+unlvNZq/BVMbFZoNLaN9Mmd9VyvqmdHmY4D3vlwnepP7cHx0f33ie
0vVmnRr6ZJvS5QIAgCUKA2SCtfPd9MgO5IKMLsgGh2rHOE70KrXnh/D7foO3
6b9fd/m7Dg/zyeI57n1HrFt4nCvfly4TXIpaDjTLuWILzwZn376ZMn+y1+Bl
OCUTrD3/0fVzR9el6856yQYBAOB8Q2eClfNedTinvSeYjGxw3kL7/obywYVL
GXD9fb0qXS64BJUcqOp96XLVyrjkbHD27Vsrb5zn+N2cwXU7NxOsnafv3MHr
0vVn3WSDAABwuh6Z4NdTr7ND+9xBuSCTkg3OXxp/atqv9IfvjOUKD3NNjeFA
AZUcqOp16XLVyrjkbHD27Vsr72Ge46znNnLi+ztQJlg756Nr6JZrNfdyMTrZ
IAAA9Bce5vO1ZXYH9+fe8xma5w7eGuNnarLB5WgZg7orXTZOfk9zvwfb0uWC
tYs5Wya3ip6VLlutnIvMBpfSvpXyPktZ5pfSZWHg93aETLB27mPnlQsyGdkg
AAB0N2UmWHvd+mvelG4LLpNscFnCw56Fue+ot6XLxsnvqWwQJhbXtsxlV6XL
lSnnUrPBRbRvpbxx/dNvc80uOeE9HTETrL1O031bkfVgmJRsEAAAjiuVCdZe
Xy5IcbLB5Qn5PeqsLbpQskGYVmWOWG5e29PS5auVdXHZ4JLaN5X3fSrvi9Jl
YYD3c6JMsPZ6udeSCzI52SAAADQrnQnWyvJh7NeAY2SDyxTy+6LelC4XJ72X
skGYSNzvLs0Py+VW0ee9N6XLWSnvorLBBbbvG7ngOkydCdZeu34tfVO6PbhM
skEAAHgs9Rdzc21yc2+27vPkUsgGlynk96kzd3CBZIMwvvAkvGvJqxrNoNyL
yAaX2L6VPRFn2650eB8LZoK1Mhxe/6Z0m3C5ZIMAAPBLj/6iTJCLJBtcrpCf
A23fwQVpyHi3pcsFzMNSssGlifME03xBbbpQc8gEa+WJZbku3S5cNtkgAADI
BKEr2eByNeRKX0uXi17v4StjOEAT2eAobXrIBV93fLx2n5G5ZYIwJ7JBAAAu
mUwQ+jmWDaa/qda/k1OzwZRt+Rs87/27zbS9Nl2IkJ/7eVW6XMA8yAYHb89n
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
13PbAZjUdjfBUZ//V50rlztiHnZYVzM+t8D+eoMfMcPLrZEa5/4d5gu2zYt8
+ZeX2d/4idYW3ezKf1YXJfX543jqfc/f6fg7ug0P915twq8Mscv1VhwnnuR+
Z1iqI/2nix7fSt81Y/dF7gYoZ5fvw3NtzyzjZoIy7s7tdx1py7/Z+3ulP5cA
TfbHhzn9PvUod/Y3onR7Hi13/hrqZelyAZS2/y781NLH/Djya39ree34b89G
ff1p7tt8O0A5x75vM7o6s4yvJijj1wHa8l8du6YK8kFYiu1u5CNmYk1z5XJH
zAEPWWKcL7emo76PYMwKD7ngsXmUMUPM/dZP1EabXfnP6iKE7vvwDu3u3OsQ
WLtgj/j29pkmz7oZoJxDjgU32QxQzrF/C+4HKGOXe1PvhmgPgKGFYcfQthOW
O/t7W7o9W8ucv4YabJ08gCVrmFc9yf2nR+Ysjn7/RnhY4/tuxD7PUPtSvBqx
fxZzx+uB2nPMvm6s/9n7UuyP/yC0zx3Uj4Tl2O5GPnJ76DXtkxfXDT3kZ132
I1zSkctID3Xtsm9g7vmHeZUTHJtd+c/qrIWHfaWGXtdo0msQWLtw4XvEd2qj
hz7TbRhpH78w0Hpt4SHTGqOMse6DzL/eH1dhvH0R43mvBirnf7/3b4O+HbBA
Hb67utpMWOZNrgyl27K1zPlrqFHnwgAsxZFscJS1PCuv3TRn8VvpdmHd0vVM
l3FQ/UiYr+1u5CO3V15uj7w4b+6w5uZE62ROejTN+2ubQ1k/6vMOD/niBMdm
V/6zOlthmnX4cvf7XIeJ9kWBNQgXvEc8HBO6z3vXtwNmIwwzV+HsvXd6lnmJ
2WBuv+aLXm8B4KAln5siG/xeYr4iHPToR96Ege5vBQaz3Y181PfYy62BWc3N
jq2tudQjzoOs/1bHtsnlpE2HbHBewsPaCbcdMry4JsCr+m9gz0zxRxr7iHNl
zl4DAC7Rkcxu1XvEQ1cyQmBJel5PN7mduMxLzAbrY8/frbcA8OBIP3O0/l1o
3zPD/RtMSkYIi7TdjXjk5srFNUarxyEzixlXXFN0rcdhD8W2tjh2yAbnI+WC
bXPn45hp67p0Ib/P0/P0b8/TuIF5gTCQI/dzrnqPeOhLRggsQbpmPjcbfDtx
mReVDe6vUV5krl0+lS4XwFyE9vVpxswG2/bMcP8GRcgIYVG2uxGP3Fy5wzy5
+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
fs0FD8e+i8oHt1+3iTo3pesa1Ibd+/TxZ7gfx5lg4udyc32aeT3W9cPMMvm+
fV/sTaJvOf+6T5gRhp7ZYByDfoifB7vqOB4b3g2ta0nCLg+86zH+zrW9yrHx
Gdd8P6/wc615Ufy7OOWa78dMH5Y2bhp4zfu83uTavi7dDoCaZe71vO34mTdH
n/urPnsmM7b+a3zc/N/4v5t7ae8Pfu5Vy882/XL1c+n17eUIBTPC0J4Nrkv3
DXC6ZgzfMd5bzDg3vg4evwY+LanG1vp3exCm1uj3+hwX8nN5vntfhnkF+77Y
m0TfMvVzYoKMMHRkgwPGnH3zotvS/Tigv1chvV7qFL2vSWkjX/PGXagkIxz5
mk82V7uCa978ra9LtwugRiExd7zj+18djAGan61+LmC8V5YaK787uA+WXRe5
/bcvxkH69loM+Bw32mfTkM8GH0r3B3C+OIbPju9L19ej1k3punrVnt4bdNC+
Dy3vy3+Ubh9ci2Dflzb2JtG3jP0cGTEjDC3ZYOh/nsVQTV03pfuxpU+a8fX9
BO3+GSY++2OEtt9OdM2bx/xQun0d1zx1VsEYmr/VxWbi8TXgcaK2N/NKq1w3
C1BCSJ9hn91LJvy6D9VF3QMKz+c8/jgY83Sto0yd93FxfaRv+eXa/J0R9vlc
vjlnTNLye25K9wMwjlBJPti87mRqXPQ4tOU+7qC1Qh33kM3bgRkE+77Ym0Tf
UuK5MUJGGNLZ4D+EYdnY/sy1h9A/V2q+b126DxP98XpAGx7Dr+ft9d1783GJ
n1ND/2zsuN1D2t5876Ky0XjN+9S/P19vf6bmZmDbP5dua6LtHwZct7uDdm9i
P/Ttt3XptgLUIHOfKDmnL44n9xlP57zUmmQy0u9t/dHj5/8cL5VuW2n69vKF
3X3yuyk/o22//inxePel2w6Mq+O15K50fR11Lmr/01/qza/hP2mezcF94Wfv
76XbCtcg2PfF3iT6lpLPkTMywpDOBv+t43Hu4++8aampedzPPeralO6/o37s
ysQ+H/fhiW1vxuKLWEsW+q2T3F/z1s/WYbfu8C6056uL+YweurPg5hpuQkeW
G/tw3/a2frwr3eaDmrtqve/zHI1tb54bDx2Pty7dZoCly8zrezafL+zOEvhx
qZ/pQ35tWnYNZeIxUmctXP09Mn17PUL/jPBx6Oe07de/JB5nEWMbYDxxrNc2
H3RdusZY501mXH9XurZkvdvPbpn34pP2E4yfC3NrB+0bBxPKzJuz78vfa9Ps
TaJvmet5ckJGGNLZYDbXCC15YEtdtx2fJ4uvpwrtueDg8fKAa7JaQNvbMp1T
r3nXuSfF88HQnguec81vwsLnV3bUd3/KNY+Pu+p4Pp3UpwDXIjEf8Nnn9aPP
9q3jgFqF9L48g/Y9kV/pW+L1miAj3H79r+OfL91OYBqhnnwwtyfOXel7D89q
ze/xdvLnusRnSPd+YQbBvi/7ttmbRN+yED3yqMOMsM+egqOcGRbazy9cF+yv
1y1t34zw+G1n2T2N0bdn1Ja7T9A8f1YjPP5NS1ZULB+M1yT3XBxl7BDaz/Er
loeHfA4+2lrWjr91c8oBEjLz+T4efc+ng7FA1WdSdPTF8b48g+fSy6/0LUfX
bcSMMPU5r3T7gOnE8XNubLuYMV7La1xz7+GmdH1/1Zlf43fyvoIteWPr3obA
eTJ/e/Z96bGGMvEYxhj6lhGF/hlhm7uRa2pbqzV7RtaSEY2+52dLJlMkI5uz
npbP6EUyspDPK9cTPL9ycyxnHz+FfA4++lip5W/9qcTzHWDpQno912/x35q5
fvtzAi7iTIqWfsjNaxx0Vrq5kfqWzPXbfUbLfRY+zghXmcd49v2l2wVMq+Ne
TtE5zwc1to2/mxo/FK9xt24omQ2e+biptUsnvc8D/QX7vuzbaG8SfctChdMz
wruJ6snNOXss0Depc/Ym+1wbdvurFs/Imhwo87n+YcLfeZdp+2rmtufWyq4n
+n258cnsGVmmjsmy6Zbx4/3M7X598JrzMHe/A/QRnq/n+hr/+5ujz/JfTnr8
EF6d8FlwbJ3r0zL3tgbth9WSgfWeW3mJ/Vtr3zLZc3YV+mWED8ef11PfV7o9
wPRaxnf78e3S88GfcVz4odSYMOTPGvx55uO2nTl4kVkElBbs+3LYTnuT6FsW
LgzLCO8mriX3mXIzY3+sMm1fzXAdUr93ts/RIZ2JTr5+MaTzwccZ251bJzrp
/MGQz8Nny4RDOhOdfPwW8msVVzO2/XhsWPyMU4BDIT2H/GNmvNkYvG4wVJBd
xb5I7cvTeY7C0WPk7o8NGkNdWv/W2rdMK5yQEab+vXQ7gHm0jO/248ubBdTY
jL9T9zxSr2ubsLtHszqwjv/9IVqPVlvL+r4zH/eVbBDmFez7su8He5PoWyoS
ujPCH2GGOVQhvYZulrlmIZ/VbGa6BneJ3/1tpt+9xH6fJavJjA8eZvrdxTKy
ZnwW0pnoLPuaxnHV8e9+nOl1JvW7Z123CNAlc5/oS+Yz/Ek5TKggu4p9cbwv
z+Bzclruu002V7eG/q21b5lHGJYRPvvvpesH5hPy853/vK8xxzivZ525PYNO
Mcr9kqmywfjYuc+NF3e2GSxBsO/Lvh+q3Jukhv6ttW+pQ8hnhP99xhpKrV9L
/d7HGdudW792N/HvXfJ6zfXEvzc3LriZse2fE79/0rmVIb+nysNc7Y51pF5r
Jq2h5bk2+1mPAG1Cej3XzzimTO09NXj/j0rGPql1koPHLJlcddJ5kUvv35r7
lnnFz0+pz22tStcNzCvUkw/ehH7zHrpsRqlnwnMBE3OA9gbtEQB0C/Z9OeyL
KvcmqaF/a+1b6rL9+h9b/xX9z5l/d/M57VrPvcudPTjJ/pYhnxE9FnjOzX3O
43rKz/cDr8Fjoo5Jxk4t13z2vV5CPqe7m+j35XLwhznbDdClZR7fHwffkzpj
4OLu84T0vjxDxz65/rzqOfP6lsHPmYFn1peuF5hfSO/RsshxVxyP9tlnNOdm
lDras8Gz9hwM6fOkGvYUhZFl/pbt+7JTxd4kNfRvrX0LQ4R8bjN6XhLyuWCR
88daPpuOWk/Y5SSPmd81+3nhIZ+RNVnOeuTflVsvOMserol6Vpl6Hse8FqH9
DPZJz1dsqSm1brLxMObfenxNSeWCT2O/pgCcKzO39PgM+7P3EqlBIgMda+zT
3Cs7ay5+7fQtpwo9M8LSdQJltNxjadyVri9R78v4unafGTMej9Gb71uN9vvb
s8Gz5n21ZIMXe84ZlBLs+7Lvh2r3Jll6/9bctzBUy+fJxzE+h22/bkJ+H4ki
GVGsqy2/aeq9GeF3fGj5zLsu2Pbcuq5GkyGdleGE9vPHi56RHvJ5ZVPX2bld
2K1JzfXtXal2x9pyf4dn/63Ha57LHxuz5+AAXULLGfYH3zPKGeRLFtL78pwy
9kmtsbzqdW36ljGEjoywdH1AOS33c4qPP3vWvzo22e9qzwbP2t8tpPcUHTwX
CGjXMjaz78sJ7Wzpz6seZ+hbrk1LZvAzfta8OeExm6xg05KTFN8HP4Tsvqr7
rGhzSo3xM21rny7gmq9b6mvuPawnuOaT7V06sM628dO3E9tewzVvy8N/xvpX
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
P/rodmI=
     "], {{0, 501}, {1799, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{344.71999999999935`, Automatic},
   ImageSizeRaw->{1799, 501},
   PlotRange->{{0, 1799}, {0, 501}}]], "Input"]
}], "Text",
 Deletable->True,
 CellID->1277825587],

Cell[CellGroupData[{

Cell[TextData[{
 "The Goldstone boson coupling to a standard model fermion ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]], "InlineMath"],
 " is:"
}], "Text",
 Deletable->True,
 CellID->744582066],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3T+PHEkZB+AyEBAe32C5D4BWug/AgC5CBNYhIpK9k7gU60A6XYI2JLzU
2UYEjpychGQJzQe4wBIRgaUVEhGSsYhIYOlmxvJ6tqunZ6Zqaqbfp6Xn/ti7
s1Wlfae6uuvX88PPfvPJ599JKf32+90/Pvn0y5988cWnX/3ie93//PSr3/36
s+92//HjRyn9t/t3/4d3d3cAAMAMdMdl53HrdgD1dceTzpt+Wd+5bd0eoK7u
+OBezb910bpdQD3dcb1R83fO9WG++nl9oOZvW7cLqKc7bgbqftG6XUAdmbl+
2bpdQD3d8dxcD3H09W2uh1j6Gh+o+4vW7QLqyMz1N63bBdTTHS/N9RBHd1wN
1PzXrdsF1NPvydmo+X5/7get2wXUkZnrr1u3C6gjk70x18OMZbI3T1q3C6gj
M9fftm4XUE9mrr9q3S6gDjlbiEfOFmKRs4V45GwhFjlbiEfOFmKRs4V45Gwh
FjlbiEfOFmKRs4VY5GwhHjlbiEXOFuKRs4VY5GwhHjlbiEXOFuKRs4VY5Gwh
HjlbiEXOFuKRs4VY5GwhHjlbiEXOFmKRs4V45GwhFjlbiEfOFmKRs4V45Gwh
FjlbiKc7vjHXQxzd8XNzPcTSHf+UvYE4uuNPAzX/59btAurIXL/v/ah124Dy
Rmr+H63bBpTX77XP1Hzvj63bB5SVydfakwszNaHmXceHGZlY87et2wmU0R2X
6WG2dsjz1m0FDrdDzXu2BszAjjXfu2zdZmB/e9T8Xes2A/tLq2dlDX3exZhl
63YD+9mz5nvXrdsO7O6Amu8tWrcf2N0BNd/zbHw4Mymfs5niZev2A7s5sOZ7
PusSzkiBmu9dte4HME0/Txeo+d5F674A26VpOZspblv3BdiuYM33blr3BxhX
uOZ7sjhwwrpjUbjme7I4cKLSHjmbCd607hcwrFLN95at+wY8VLHme9et+we8
L61yNreVar63aN1H4J10WLZuktZ9BN45Rs0nWZz3x/xR+qjz5dqrzt2A1/e+
5sMJr/mi84fWfeP0Hanme+GzOF1NftzXZabGp3i1fg/4wcBrP11/zS9b95PT
1x3Pj1Dzvcet+9psjLta7HybqeX/z+eZ73t7TvBi5D1g833kwXsC3JfKZOum
umjd36OP76puczX7eaHXuu/b1n3mtKVy2bopblv39+jju5qLB+f3Sq97Z23P
Nv38e8T5/qZ1f482rt15dmZe7q/RfVzoZ+Rq39qeSY5U/1et+3mUsXyUPsxc
m+9r/qPCP2vovcXanp2kVQZnWanuZ5/FOWbN3/t51vYUUaH+Z5/FGan5qufe
G3O+tT0HS6vc/W2Bup/1Z96u1/O5e3RVa7G/J2BtTw3p8Pv71637UHV8HqVn
mZp/VXu9vX7PsbanqPU1v0Pn+0XrflQbn/F7akeZf9fvL9b2FJOGr/P3fzY5
p9u6D9XG5uF1tfteHLEdz6ztKSUz1y/v/d3Qe8Lg18/Rlr1zRe7Tw7Fl1vWL
ja/ZVv+zzOJsXE9rNtdDSWn4eZrLLV+/HPieWWZxRu7Zmes5W5kavpjwfZv1
P7vPvN0y179q3T7YR2auv9nxNa52/Z5zMXKv/uDMDbSShp/BcdG6XacgrbKw
YznY4vtxobY0/Nk4s7w2t9f4jD8rxz10zlJ6uC/3zRzX6HuPz/g5vnvonJ3M
XH/dul2nYmNPrOw7Zy+tnq25uQfPXH9/jFbPyBure/vjOSv9vD4w1/vc2vtj
NL4X/3XBn/N0y/vLFPYOMSoz19+2btep2VKPxessvXtu/tg1hfeuL7iPyFSZ
uf6qdbtOTcrnbXtPK//ssf2B/d9t/UwNeGu9v36z5m9bt+sUpfEcTu3na4yd
a9gXzE4ymZpF63adoi11X/X8euRcw75gdpKZ65et23Wqtpzn16771y3OM5if
NCFny73xGj/Xrlb3aXzfgD0DTJbJ3ixbt+uUpfH7eDXrfmzfgD0DTJb2zNlG
tqX+qp1vp3wmQB6AyUrkbCPacr79rOLPbfKMbuZFzvaAsctf2yu2X2/j51nb
czA52wPHb/xcv8ZnYVnbczA52wJjmN87V/zanrU9h5KzLTSO+Tn4dek52Nqe
Q8jZFh7P/Dq/2Jxvbc+h5GwLj+eqJnPn+0XW+Wl8v4C1PaPkbCuNa/6zr4vk
40beV6zt2UrOtuLYjtf+3vP+lrne2p5RcrZHGOPVOX9uvb9Tja5faywH8G2N
+4XMi5ztEcd6dZ0/d27+dD2HP1iXd3/28frvxnK+z1zLYwo520bjvvocrbEa
nupFyfsDxCBn215694y8sez+2/P3t1/r+TnsRc4W4pGzhVjkbCEeOVuIRc4W
4pGzhVjkbCEWOVuIR84WYpGzhXjkbCEWOVuIR84WYpGzhXjkbCEWOVuIR84W
YpGzhXjkbCEWOVuIR84WYpGzhVjkbCEeOVuIRc4W4pGzhVjkbCEeOduqY3s5
cF+0pCL7KjLne6X068fLAm28qDyWN8HGcvO1l63rZS4y76mlLSr8DpR28O+U
sSw6llel+8574zuUYz6139XLM/ldNZblxvJXA6970bpe5mL9e7B5n6Skl4Xa
eVP5d/WxsTypsVwMvO7z1vUyJ2l1j3RRwcHrvI12XlZq58UZjOUi4FguU+Hz
HeC0Jdf2IKTkXh6Ek5nzi1znAE5Xd3w9UPtXrdsF1JNkcyCkJJ8D4WTmfM/e
gJnrjicDc/5163YBdSXP1oRwkudrQkgDc/5dyf3BwOlJPisLQspkdi5atwuo
JzPny+nCzMnpQjxyuhCTnC7EI6cLMcnpQjxyuhCTnC7EI6cLMcnpQkxyuhCP
nC7EJKcL8cjpQkxyuhCPnC7EJKcL8cjpQkxyuhCPnC7EJKcL8cjpQkxyuhCP
nC7EJKcLMcnpQjxyuhCTnC7EI6cLMcnpQjxyuhCTnC7EI6cLMcnpQjyZOf+v
rdsF1JXJ6f6+dbuAetaZnX9v1P1/3NeDecus8/9m7z7M13rO36z73l/UPsxX
d/w9U/sv1T7MU+b6nmdxwox1x+ORupfdgRkaWeOrfZixNJzNV/swY5n7eUOu
W7cVKCMNP4cr56p1e4HDdcflDnWv9mEm0sPn7Kt9mLnueL5j3fcuW7cb2F8a
/kytbd6ofThfafjZe2ofZm7Pulf7cMbS8DM3p7pNcjxwdtJ4RmcKGT44M2l7
Rkftw8ykaRkdtQ8zs67ZErV/07ovwDRpekZH7cNMpN0yOmofZiANf6bGob5u
3S9gXNo9ozPFVet+AXlpv4yO2ocz1h1PKtW92ocTlfbP6Ey1aN1H4KHKdS/H
AycoHZbRUftwhtJ+z+FQ+3DGUpmMztTat5cfTkAql9GZQo4HTkQql9GZwp4+
OAHp8OdwTLFM7uvByUjlMzr33XYet+4j8L5UJ6PT1/tV674BeWnaZ+VO0V+3
v27dH2C7dHhG519ptRfA9Xo4E+nwjM43rfsA7Cbt/lm5Qxat+wHsZof6XnZ+
NvTnrfsA7CZtz+gs78/pafjZnItW7Qd2l/IZnf5a/4N78Gn4/t/L1v0ApksP
n8PR1/vVlu8Z2us3+j3A6UjvMjqT78Gvv2fz+Zy3rfsCTJdWe3Z3ugefWR9c
te4LUE9mzpe3h5lLw/t+rlu3C6grPdzjb86HmUvDed7r1u0C6hqY83sXrdsF
1DOwB6B307pdQF2Z/b4XrdsF1JOZ85+3bhdQV2bOX7RuF1BPJrOzbN0uoK4k
pwvhZOZ8OV2YOTldiEdOF2KS04V45HQhJjldiElOF+KR04WY5HQhHjldiElO
F+KR04WY5HQhHjldiElOF+KR04WY5HQhHjldiElOF+KR04WY5HQhJjldiEdO
F2KS04V45HQhJjldiEdOF2KS04V45HQhJjldiEdOF2KS04V45HQhJjldiEdO
F2KS04WY5HQhHjldiElOF+KR04WY5HQhHjldiElOF+KR04WY5HQhnsycf9m6
XUBdGznd29btAY5jndvp9/I9ad0WoI3/ASVK3YY=
       "], {{0, 319}, {254, 0}}, {0, 
       255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{42.228125000000176`, Automatic},
     ImageSizeRaw->{254, 319},
     PlotRange->{{0, 254}, {0, 319}}], " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     FractionBox["g", 
      RowBox[{"cos", " ", 
       SubscriptBox["\[Theta]", "W"]}]], 
     SubsuperscriptBox["g", "A", "f"], 
     SubscriptBox["\[Gamma]", "5"]}]}], ","}], 
  TraditionalForm]], "NumberedEquation",
 CellID->1456278047]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["g", "A", "f"], "=", 
    SubsuperscriptBox["T", "f", "3"]}], TraditionalForm]], "InlineMath"],
 ".  Using the Feynman rules, the ",
 Cell[BoxData[
  FormBox["G\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function is:"
}], "Text",
 Deletable->True,
 CellID->1445665764],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", " ", 
    SubsuperscriptBox[
     RowBox[{"\[CapitalGamma]", "(", "f", ")"}], "G", "\[Nu]\[Rho]"]}], "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["e", "2"], "g"}], 
       RowBox[{"2", "cos", " ", 
        SubscriptBox["\[Theta]", "W"]}]], "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "i"}], " ", "m"}], 
         SubscriptBox["m", "Z"]], " ", 
        SuperscriptBox["\[Mu]", 
         RowBox[{"2", "\[Epsilon]"}]], 
        RowBox[{"\[Integral]", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[DifferentialD]", "d"], "k"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "d"]], 
          FractionBox[
           RowBox[{"Tr", "[", 
            RowBox[{
             SubscriptBox["g", "A"], 
             RowBox[{
              SubscriptBox["\[Gamma]", "5"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
              RowBox[{
               RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}]}], "]"}], 
           RowBox[{
            RowBox[{
             RowBox[{"[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
               SuperscriptBox["m", "2"]}], "]"}], "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"k", "-", 
                 SubscriptBox["p", "1"]}], ")"}], "2"], "-", 
              SuperscriptBox["m", "2"]}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              SuperscriptBox["m", "2"]}], ")"}]}]]}]}]}], 
       "\[IndentingNewLine]", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "i"}], " ", "m"}], 
         SubscriptBox["m", "Z"]], 
        SuperscriptBox["\[Mu]", 
         RowBox[{"2", "\[Epsilon]"}]], 
        RowBox[{"\[Integral]", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[DifferentialD]", "d"], "k"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "d"]], 
          FractionBox[
           RowBox[{"Tr", "[", 
            RowBox[{
             SubscriptBox["g", "A"], 
             RowBox[{
              SubscriptBox["\[Gamma]", "5"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Nu]"], "(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "2"]}], ")"}], ".", "\[Gamma]"}], "+", 
               "m"}], ")"}], "Q", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Rho]"], "(", 
              RowBox[{
               RowBox[{"k", ".", "\[Gamma]"}], "+", "m"}], ")"}]}], "]"}], 
           RowBox[{
            RowBox[{
             RowBox[{"[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"k", "-", 
                  SubscriptBox["p", "1"], "-", 
                  SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
               SuperscriptBox["m", "2"]}], "]"}], "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"k", "-", 
                 SubscriptBox["p", "2"]}], ")"}], "2"], "-", 
              SuperscriptBox["m", "2"]}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              SuperscriptBox["m", "2"]}], ")"}]}]]}]}]}]}], "]"}], "."}]}]}], 
  TraditionalForm]], "NumberedEquation",
 CellID->1242909836]
}, Open  ]],

Cell[TextData[{
 "As before, the photons are on shell ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["p", "1", "2"], "=", 
    RowBox[{
     SubsuperscriptBox["p", "2", "2"], "=", "0"}]}], TraditionalForm]], 
  "InlineMath"],
 ", and the Goldstone boson ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]], "InlineMath"],
 " is off its mass shell with a mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "1"], "+", 
       SubscriptBox["p", "2"]}], ")"}], "2"], "=", "s"}], TraditionalForm]], 
  "InlineMath"],
 ".  To be consistent, we continue to omit the prefactor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["e", "2"], "g"}], 
     RowBox[{"2", "cos", " ", 
      SubscriptBox["\[Theta]", "W"]}]]}], TraditionalForm]], "InlineMath"],
 " from the calculations."
}], "Text",
 Deletable->True,
 CellID->1130091793],

Cell[CellGroupData[{

Cell[TextData[{
 "Initiate loop integration with ",
 Cell[BoxData[
  ButtonBox["LoopIntegrate",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopIntegrate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ", and apply the on shell conditions:"
}], "MathCaption",
 CellID->1514568392],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagramGS1", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "m"}], "mZ"], 
       RowBox[{"Spur", "[", 
        RowBox[{
         RowBox[{"gA", " ", "\[Gamma]5"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "p1", "-", "p2"}], ")"}], ".", "\[Gamma]"}], 
          "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
         RowBox[{"Q", " ", 
          SubscriptBox["\[Gamma]", "\[Rho]"]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "p1"}], ")"}], ".", "\[Gamma]"}], "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
         RowBox[{"Q", " ", 
          SubscriptBox["\[Gamma]", "\[Nu]"]}], ",", 
         RowBox[{
          RowBox[{"k", ".", "\[Gamma]"}], "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}]}], "]"}]}], ",", "k", 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", "onShell"}]}], 
  ";"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->1227296453],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagramGS2", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "m"}], "mZ"], 
       RowBox[{"Spur", "[", 
        RowBox[{
         RowBox[{"gA", " ", "\[Gamma]5"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "p1", "-", "p2"}], ")"}], ".", "\[Gamma]"}], 
          "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
         RowBox[{"Q", " ", 
          SubscriptBox["\[Gamma]", "\[Nu]"]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "p2"}], ")"}], ".", "\[Gamma]"}], "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
         RowBox[{"Q", " ", 
          SubscriptBox["\[Gamma]", "\[Rho]"]}], ",", 
         RowBox[{
          RowBox[{"k", ".", "\[Gamma]"}], "+", 
          RowBox[{"m", " ", "\[DoubleStruckOne]"}]}]}], "]"}]}], ",", "k", 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p1", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "p2"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", "onShell"}]}], 
  ";"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->591056136]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Sum the diagrams to obtain the contribution of a single fermion flavor to \
the RHS of the Ward identity, and store the result as ",
 Cell[BoxData["RHS1"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->166712114],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RHS1", "[", 
   RowBox[{"gA_", ",", "Q_", ",", "m_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "mZ", " ", 
    RowBox[{"(", 
     RowBox[{"diagramGS1", "+", "diagramGS2"}], ")"}]}], "//", 
   "LoopRefine"}]}]], "Input",
 CellLabel->"In[33]:=",
 CellID->755853619],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", "gA", " ", 
  SuperscriptBox["m", "2"], " ", 
  SuperscriptBox["Q", "2"], " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"ScalarC0", "[", 
   RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m", ",", "m"}], 
   "]"}]}]], "Output",
 ImageSize->{335, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[33]=",
 CellID->437548918]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Add up the contributions from all fermion flavors in one generation, to \
obtain the RHS of the Ward identity:\
\>", "MathCaption",
 CellID->1813344983],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RHS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"3", 
     RowBox[{"RHS1", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}], ",", "mu"}], "]"}]}], "+", 
    RowBox[{"3", 
     RowBox[{"RHS1", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}], ",", "md"}], "]"}]}], "+", 
    RowBox[{"RHS1", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "0", ",", "m\[Nu]"}], "]"}], "+", 
    RowBox[{"RHS1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "me"}], "]"}]}], "//", "Simplify"}]}]], "Input",
 CellLabel->"In[34]:=",
 CellID->1948694704],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "3"], " ", "\[ImaginaryI]", " ", 
  SubscriptBox["\[CurlyEpsilon]", 
   RowBox[{"\[Nu]", ",", "\[Rho]", ",", 
    RowBox[{"{", "p1", "}"}], ",", 
    RowBox[{"{", "p2", "}"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["md", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "md", ",", "md", ",", "md"}], 
      "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["me", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "me", ",", "me", ",", "me"}], 
      "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"ScalarC0", "[", 
      RowBox[{"0", ",", "0", ",", "s", ",", "mu", ",", "mu", ",", "mu"}], 
      "]"}]}]}], ")"}]}]], "Output",
 ImageSize->{494, 50},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[34]=",
 CellID->1885824830]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check that the Ward identity is satisfied:", "MathCaption",
 CellID->110799672],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LHS", "==", "RHS"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->1848261869],

Cell[BoxData["True"], "Output",
 ImageSize->{33, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[35]=",
 CellID->2069449448]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Final result for the ",
 Cell[BoxData[
  FormBox[
   FormBox["Z\[Gamma]\[Gamma]",
    TraditionalForm], TraditionalForm]], "InlineMath"],
 " vertex function"
}], "Section",
 CellID->852969792],

Cell[TextData[{
 "Verification of the Ward identities at all three vertices confirms the \
correctness of the calculation obtained with ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X, despite being computed in naive dimensional regularization.  The final \
result of the ",
 Cell[BoxData[
  FormBox["Z\[Gamma]\[Gamma]", TraditionalForm]], "InlineMath"],
 " vertex function can be constructed from ",
 Cell[BoxData["correctedVertexFunction"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " upon summing over all fermion flavors."
}], "Text",
 CellID->929156978],

Cell[CellGroupData[{

Cell[TextData[{
 "Sum ",
 Cell[BoxData["correctedVertexFunction"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.2"]], "Source Sans Pro", 
    Inherited]],
 " over the fermion flavors to obtain the final result:"
}], "MathCaption",
 CellID->920990751],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"3", 
     RowBox[{"correctedVertexFunction", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}], ",", "mu"}], "]"}]}], "+", 
    RowBox[{"3", 
     RowBox[{"correctedVertexFunction", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}], ",", "md"}], "]"}]}], "+", 
    RowBox[{"correctedVertexFunction", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "0", ",", "m\[Nu]"}], "]"}], "+", 
    RowBox[{"correctedVertexFunction", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "me"}], "]"}]}], "//", "LoopRefine"}], "//", 
  "TraditionalForm"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->1206802212],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["p1", "\[Mu]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", "\[InvisibleComma]", "\[Rho]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "-", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], "s"], "+", 
      FractionBox[
       RowBox[{"6", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "-", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], "s"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["p1", "\[Rho]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", "\[InvisibleComma]", "\[Nu]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["md", "2"], " ", 
         TooltipBox[
          RowBox[{
           SubscriptBox["C", "0"], "(", 
           RowBox[{"0", ",", "0", ",", "s"}], ";", 
           RowBox[{"md", ",", "md", ",", "md"}], ")"}],
          "ScalarC0"]}], 
        RowBox[{"3", " ", "s"}]]}], "-", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "+", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], "s"], "+", 
      FractionBox[
       RowBox[{"6", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "-", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], "s"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["p1", "\[Nu]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", "\[InvisibleComma]", "\[Rho]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["md", "2"], " ", 
         TooltipBox[
          RowBox[{
           SubscriptBox["C", "0"], "(", 
           RowBox[{"0", ",", "0", ",", "s"}], ";", 
           RowBox[{"md", ",", "md", ",", "md"}], ")"}],
          "ScalarC0"]}], 
        RowBox[{"3", " ", "s"}]]}], "-", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "+", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "-", 
      FractionBox[
       RowBox[{"10", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], 
       RowBox[{"3", " ", "s"}]], "-", 
      FractionBox[
       RowBox[{"10", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "+", 
      FractionBox[
       RowBox[{"40", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], 
       RowBox[{"3", " ", "s"}]]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["p2", "\[Mu]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Nu]", "\[InvisibleComma]", "\[Rho]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "-", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], "s"], "+", 
      FractionBox[
       RowBox[{"6", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "-", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], "s"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["p2", "\[Nu]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", "\[InvisibleComma]", "\[Rho]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "-", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "-", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], "s"], "-", 
      FractionBox[
       RowBox[{"6", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "+", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], "s"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["p2", "\[Rho]"], " ", 
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{"\[Mu]", "\[InvisibleComma]", "\[Nu]", "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}], "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["me", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"me", ",", "me", ",", "me"}], ")"}],
         "ScalarC0"]}], "s"], "-", 
      FractionBox[
       RowBox[{"16", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"10", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "md", ",", "md"}], ")"}],
         "DiscB"]}], 
       RowBox[{"3", " ", "s"}]], "+", 
      FractionBox[
       RowBox[{"10", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "me", ",", "me"}], ")"}],
         "DiscB"]}], "s"], "-", 
      FractionBox[
       RowBox[{"40", " ", "\[ImaginaryI]", " ", 
        TooltipBox[
         RowBox[{"\[CapitalLambda]", "(", 
          RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
         "DiscB"]}], 
       RowBox[{"3", " ", "s"}]]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{
     "\[Mu]", "\[InvisibleComma]", "\[Nu]", "\[InvisibleComma]", "\[Rho]", 
      "\[InvisibleComma]", 
      RowBox[{"{", "p1", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["2", "3"], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["me", "2"], " ", 
       TooltipBox[
        RowBox[{
         SubscriptBox["C", "0"], "(", 
         RowBox[{"0", ",", "0", ",", "s"}], ";", 
         RowBox[{"me", ",", "me", ",", "me"}], ")"}],
        "ScalarC0"]}], "+", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], "3"], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "md", ",", "md"}], ")"}],
        "DiscB"]}], "+", 
      RowBox[{"3", " ", "\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "me", ",", "me"}], ")"}],
        "DiscB"]}], "-", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
        "DiscB"]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[CurlyEpsilon]", 
     RowBox[{
     "\[Mu]", "\[InvisibleComma]", "\[Nu]", "\[InvisibleComma]", "\[Rho]", 
      "\[InvisibleComma]", 
      RowBox[{"{", "p2", "}"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["md", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"md", ",", "md", ",", "md"}], ")"}],
         "ScalarC0"]}], "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["me", "2"], " ", 
       TooltipBox[
        RowBox[{
         SubscriptBox["C", "0"], "(", 
         RowBox[{"0", ",", "0", ",", "s"}], ";", 
         RowBox[{"me", ",", "me", ",", "me"}], ")"}],
        "ScalarC0"]}], "-", 
      FractionBox[
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["mu", "2"], " ", 
        TooltipBox[
         RowBox[{
          SubscriptBox["C", "0"], "(", 
          RowBox[{"0", ",", "0", ",", "s"}], ";", 
          RowBox[{"mu", ",", "mu", ",", "mu"}], ")"}],
         "ScalarC0"]}], "3"], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "md", ",", "md"}], ")"}],
        "DiscB"]}], "-", 
      RowBox[{"3", " ", "\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "me", ",", "me"}], ")"}],
        "DiscB"]}], "+", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       TooltipBox[
        RowBox[{"\[CapitalLambda]", "(", 
         RowBox[{"s", ",", "mu", ",", "mu"}], ")"}],
        "DiscB"]}]}], ")"}]}]}], TraditionalForm]], "Output",
 ImageSize->{576, 861},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[36]//TraditionalForm=",
 CellID->137474011]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Therefore, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"i", " ", 
     SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"]}], "=", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["e", "2"], "g"}], 
       RowBox[{"2", "cos", " ", 
        SubscriptBox["\[Theta]", "W"]}]]}], 
     StyleBox[
      FractionBox["i", 
       RowBox[{"16", 
        SuperscriptBox["\[Pi]", "2"]}]],
      FontColor->RGBColor[0.6666666666666666, 0., 0.]], 
     RowBox[{"(", 
      RowBox[{"output", " ", "above"}], ")"}]}]}], TraditionalForm]], 
  "InlineMath"],
 ".  Observe the absence of integer constants in the sum which are present in \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", " ", 
    RowBox[{
     SuperscriptBox["\[CapitalGamma]", "\[Mu]\[Nu]\[Rho]"], "(", "f", ")"}]}],
    TraditionalForm]], "InlineMath"],
 " for a single fermion flavor.  Its absence is due to anomaly cancellation."
}], "Text",
 CellID->589455952]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
     "MORE ABOUT", "TutorialMoreAboutSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      Cell[
       TextData[{
         Cell[
          BoxData[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[24]]]], "Related Guides"}], "TutorialMoreAboutSection", 
       CellSize -> {5000, Inherited}], None]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->23220180],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]],

Cell[TextData[ButtonBox["Package-X",
 BaseStyle->"Link",
 ButtonData->"paclet:X/guide/PackageX"]], "TutorialMoreAbout",
 CellID->1567025153],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->FEPrivate`If[
  FEPrivate`Or[
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"], 
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"]], 
  "Ward Identities and \[Gamma]_5 in Dimension Regularization - Wolfram \
Mathematica", "Ward Identities and \[Gamma]_5 in Dimension Regularization"],
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:X/guide/X", 
         BaseStyle -> {"Link", "DockedLinkTrail"}], 
        Cell[">", "DockedLinkTrailSeparator"]}]}}, ColumnAlignments -> Left], 
  "Metadata" -> {
   "built" -> "{2017, 11, 26, 23, 53, 24.760630}", 
    "history" -> {"2.0", "", "", ""}, "context" -> "X`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Package-X Tutorial", "language" -> "en", "paclet" -> 
    "Package-X", "status" -> "None", "summary" -> 
    "In Package-X, the fifth Dirac gamma matrix \[Gamma]5 is defined to \
anticommute with all other gamma matrices. This implementation is \"naive \
dimensional regularization\", and can lead to apparent violations of Ward \
identities. This tutorial explains how to deal with \[Gamma]5, enforce Ward \
identities, and check for anomaly cancellation with Package-X, using the \
on-shell Z\[Gamma]\[Gamma] vertex function in the standard model as an \
example. For a given fermion flavor in the standard model (quark or lepton), \
there are two diagrams contributing to the Z\[Gamma]\[Gamma] vertex function: \
", "synonyms" -> {}, "title" -> 
    "Ward Identities and \[Gamma]_5 in Dimension Regularization", 
    "titlemodifier" -> "", "windowtitle" -> 
    "Ward Identities and \[Gamma]_5 in Dimension Regularization", "type" -> 
    "Tutorial", "uri" -> "X/tutorial/AdlersMethod"}, "SearchTextTranslated" -> 
  ""},
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

